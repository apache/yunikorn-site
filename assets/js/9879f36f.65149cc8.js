"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25729],{58860:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>m});var r=a(37953);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,r,o=function(e,n){if(null==e)return{};var a,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var a=e.components,o=e.mdxType,t=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),g=p(a),d=o,m=g["".concat(l,".").concat(d)]||g[d]||c[d]||t;return a?r.createElement(m,s(s({ref:n},u),{},{components:a})):r.createElement(m,s({ref:n},u))}));function m(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=a.length,s=new Array(t);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[g]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<t;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},25232:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>t,metadata:()=>i,toc:()=>p});var r=a(72994),o=(a(37953),a(58860));const t={id:"scheduler",title:"Scheduler"},s=void 0,i={unversionedId:"api/scheduler",id:"version-1.0.0/api/scheduler",title:"Scheduler",description:"\x3c!--",source:"@site/versioned_docs/version-1.0.0/api/scheduler.md",sourceDirName:"api",slug:"/api/scheduler",permalink:"/docs/1.0.0/api/scheduler",draft:!1,tags:[],version:"1.0.0",frontMatter:{id:"scheduler",title:"Scheduler"},sidebar:"docs",previous:{title:"Cluster",permalink:"/docs/1.0.0/api/cluster"},next:{title:"System",permalink:"/docs/1.0.0/api/system"}},l={},p=[{value:"Partitions",id:"partitions",level:2},{value:"Success response",id:"success-response",level:3},{value:"Error response",id:"error-response",level:3},{value:"Queues",id:"queues",level:2},{value:"Partition queues",id:"partition-queues",level:3},{value:"Success response",id:"success-response-1",level:3},{value:"Error response",id:"error-response-1",level:3},{value:"Applications",id:"applications",level:2},{value:"Queue applications",id:"queue-applications",level:3},{value:"Success response",id:"success-response-2",level:3},{value:"Error response",id:"error-response-2",level:3},{value:"Nodes",id:"nodes",level:2},{value:"Partition nodes",id:"partition-nodes",level:3},{value:"Success response",id:"success-response-3",level:3},{value:"Error response",id:"error-response-3",level:3},{value:"Goroutines info",id:"goroutines-info",level:2},{value:"Success response",id:"success-response-4",level:3},{value:"Error response",id:"error-response-4",level:3},{value:"Metrics",id:"metrics",level:2},{value:"Success response",id:"success-response-5",level:3},{value:"Configuration validation",id:"configuration-validation",level:2},{value:"Success response",id:"success-response-6",level:3},{value:"Allowed configuration",id:"allowed-configuration",level:4},{value:"Disallowed configuration",id:"disallowed-configuration",level:4},{value:"Configuration Create",id:"configuration-create",level:2},{value:"Success response",id:"success-response-7",level:3},{value:"Allowed configuration",id:"allowed-configuration-1",level:4},{value:"Disallowed configuration",id:"disallowed-configuration-1",level:4},{value:"Error response",id:"error-response-5",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Success response",id:"success-response-8",level:3},{value:"Configuration update",id:"configuration-update",level:2},{value:"Success response",id:"success-response-9",level:3},{value:"Failure response",id:"failure-response",level:3},{value:"Error response",id:"error-response-6",level:3},{value:"Application history",id:"application-history",level:2},{value:"Success response",id:"success-response-10",level:3},{value:"Error response",id:"error-response-7",level:3},{value:"Container history",id:"container-history",level:2},{value:"Success response",id:"success-response-11",level:3},{value:"Error response",id:"error-response-8",level:3},{value:"Endpoint healthcheck",id:"endpoint-healthcheck",level:2},{value:"Success response",id:"success-response-12",level:3},{value:"Retrieve full state dump",id:"retrieve-full-state-dump",level:2},{value:"Success response",id:"success-response-13",level:3},{value:"Failure response",id:"failure-response-1",level:3},{value:"Enable or disable periodic state dump",id:"enable-or-disable-periodic-state-dump",level:2},{value:"Success response",id:"success-response-14",level:3},{value:"Error response",id:"error-response-9",level:3}],u={toc:p},g="wrapper";function c(e){let{components:n,...a}=e;return(0,o.yg)(g,(0,r.A)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"overview"},"Overview"),(0,o.yg)("p",null,"The scheduler REST API returns information about various objects used by the YuniKorn Scheduler."),(0,o.yg)("p",null,"Many of these APIs return collections of resources. Internally, all resources are represented as raw\n64-bit signed integer types. When interpreting responses from the REST API, resources of type ",(0,o.yg)("inlineCode",{parentName:"p"},"memory"),"\nare returned in units of bytes while resources of type ",(0,o.yg)("inlineCode",{parentName:"p"},"vcore")," are returned in units of millicores\n(thousands of a core). All other resource types have no specific unit assigned."),(0,o.yg)("p",null,"Under the ",(0,o.yg)("inlineCode",{parentName:"p"},"allocations")," field in the response content for the app/node-related calls in the following spec, ",(0,o.yg)("inlineCode",{parentName:"p"},"placeholderUsed")," refers to whether or not the allocation is a replacement for a placeholder. If true, ",(0,o.yg)("inlineCode",{parentName:"p"},"requestTime")," is the creation time of its placeholder allocation, otherwise it's that of the allocation's ask. ",(0,o.yg)("inlineCode",{parentName:"p"},"allocationTime")," is the creation time of the allocation, and ",(0,o.yg)("inlineCode",{parentName:"p"},"allocationDelay")," is simply the difference between ",(0,o.yg)("inlineCode",{parentName:"p"},"allocationTime")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"requestTime"),"."),(0,o.yg)("h2",{id:"partitions"},"Partitions"),(0,o.yg)("p",null,"Displays general information about the partition like name, state, capacity, used capacity, utilization, and node sorting policy."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/partitions")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "clusterId": "mycluster",\n        "name": "default",\n        "state": "Active",\n        "lastStateTransitionTime": 1649167576110754000,\n        "capacity": {\n            "capacity": {\n                "ephemeral-storage": 188176871424,\n                "hugepages-1Gi": 0,\n                "hugepages-2Mi": 0,\n                "memory": 1000000000,\n                "pods": 330,\n                "vcore": 1000\n            },\n            "usedCapacity": {\n                "memory": 800000000,\n                "vcore": 500\n            },\n            "utilization": {\n                "memory": 80,\n                "vcore": 50\n            }\n        },\n        "nodeSortingPolicy": {\n            "type": "fair",\n            "resourceWeights": {\n                "memory": 1.5,\n                "vcore": 1.3\n            }\n        },\n        "applications": {\n            "New": 5,\n            "Pending": 5,\n            "total": 10\n        }\n    },\n    {\n        "clusterId": "mycluster",\n        "name": "gpu",\n        "state": "Active",\n        "lastStateTransitionTime": 1649167576111236000,\n        "capacity": {\n            "capacity": {\n                "memory": 2000000000,\n                "vcore": 2000\n            },\n            "usedCapacity": {\n                "memory": 500000000,\n                "vcore": 300\n            },\n            "utilization": {\n                "memory": 25,\n                "vcore": 15\n            }\n        },\n        "nodeSortingPolicy": {\n            "type": "binpacking",\n            "resourceWeights": {\n                "memory": 0,\n                "vcore": 4.11\n            }\n        },\n        "applications": {\n            "New": 5,\n            "Running": 10,\n            "Pending": 5,\n            "total": 20\n        }\n    }\n]\n')),(0,o.yg)("h3",{id:"error-response"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"queues"},"Queues"),(0,o.yg)("h3",{id:"partition-queues"},"Partition queues"),(0,o.yg)("p",null,"Fetch all Queues associated with given Partition and displays general information about the queues like name, status, capacities and properties.\nThe queues' hierarchy is kept in the response json.  "),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/partition/{partitionName}/queues")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-1"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("p",null,"For the default queue hierarchy (only ",(0,o.yg)("inlineCode",{parentName:"p"},"root.default")," leaf queue exists) a similar response to the following is sent back to the client:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "queuename": "root",\n        "status": "Active",\n        "maxResource": {\n            "ephemeral-storage": 188176871424,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 8000000000,\n            "pods": 330,\n            "vcore": 8000\n        },\n        "guaranteedResource": {\n            "memory": 54000000,\n            "vcore": 80\n        },\n        "allocatedResource": {\n            "memory": 54000000,\n            "vcore": 80\n        },\n        "isLeaf": "false",\n        "isManaged": "false",\n        "properties": {\n            "application.sort.policy": "stateaware"\n        },\n        "parent": "",\n        "template": {\n            "maxResource": {\n                "memory": 8000000000,\n                "vcore": 8000\n            },\n            "guaranteedResource": {\n                "memory": 54000000,\n                "vcore": 80\n            },\n            "properties": {\n                "application.sort.policy": "stateaware"\n            }\n        },\n        "partition": "default",\n        "children": [\n            {\n                "queuename": "root.default",\n                "status": "Active",\n                "maxResource": {\n                    "memory": 8000000000,\n                    "vcore": 8000\n                },\n                "guaranteedResource": {\n                    "memory": 54000000,\n                    "vcore": 80\n                },\n                "allocatedResource": {\n                    "memory": 54000000,\n                    "vcore": 80\n                },\n                "isLeaf": "true",\n                "isManaged": "false",\n                "properties": {\n                    "application.sort.policy": "stateaware"\n                },\n                "parent": "root",\n                "template": null,\n                "children": [],\n                "absUsedCapacity": {\n                    "memory": 1,\n                    "vcore": 0\n                }\n            }\n        ],\n        "absUsedCapacity": {\n            "memory": 1,\n            "vcore": 0\n        }\n    } \n]\n')),(0,o.yg)("h3",{id:"error-response-1"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"400 Bad Request")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 400,\n    "message": "Partition is missing in URL path. Please check the usage documentation",\n    "description": "Partition is missing in URL path. Please check the usage documentation"\n}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"applications"},"Applications"),(0,o.yg)("h3",{id:"queue-applications"},"Queue applications"),(0,o.yg)("p",null,"Fetch all Applications for the given Partition Queue combination and displays general information about the applications like used resources, queue name, submission time and allocations."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/partition/{partitioName}/queue/{queueName}/applications")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-2"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("p",null,"In the example below there are three allocations belonging to two applications."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "applicationID": "application-0001",\n        "usedResource": {\n          "memory": 4000000000,\n          "vcore": 4000\n        },\n        "maxUsedResource": {\n          "memory": 4000000000,\n          "vcore": 4000\n        },\n        "partition": "default",\n        "queueName": "root.default",\n        "submissionTime": 1648754032076020293,\n        "allocations": [\n            {\n                "allocationKey": "deb12221-6b56-4fe9-87db-ebfadce9aa20",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0001",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "9af35d44-2d6f-40d1-b51d-758859e6b8a8",\n                "resource": {\n                    "memory": 4000000000,\n                    "vcore": 4000\n                },\n                "priority": "0",\n                "queueName": "root.default",\n                "nodeId": "node-0001",\n                "applicationId": "application-0001",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": true\n            }\n        ],\n        "applicationState": "Running",\n        "user": "nobody",\n        "rejectedMessage": "",\n        "stateLog": [\n            {\n                "time": 1648741409145224000,\n                "applicationState": "Accepted"\n            },\n            {\n                "time": 1648741409145509400,\n                "applicationState": "Starting"\n            },\n            {\n                "time": 1648741409147432100,\n                "applicationState": "Running"\n            }\n        ],\n        "placeholderData": [\n            {\n                "taskGroupName": "task-group-example",\n                "count": 2,\n                "minResource": {\n                    "memory": 1000000000,\n                    "vcore": 100\n                },\n                "requiredNode": "",\n                "replaced": 2\n            }\n        ]\n    },\n    {\n        "applicationID": "application-0002",\n        "usedResource": {\n          "memory": 4000000000,\n          "vcore": 4000\n        },\n        "maxUsedResource": {\n          "memory": 4000000000,\n          "vcore": 4000\n        },\n        "partition": "default",\n        "queueName": "root.default",\n        "submissionTime": 1648754032076020293,\n        "allocations": [\n            {\n                "allocationKey": "54e5d77b-f4c3-4607-8038-03c9499dd99d",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0002",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "08033f9a-4699-403c-9204-6333856b41bd",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "queueName": "root.default",\n                "nodeId": "node-0001",\n                "applicationId": "application-0002",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            },\n            {\n                "allocationKey": "af3bd2f3-31c5-42dd-8f3f-c2298ebdec81",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0002",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task1"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "96beeb45-5ed2-4c19-9a83-2ac807637b3b",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "queueName": "root.default",\n                "nodeId": "node-0002",\n                "applicationId": "application-0002",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            }\n        ],\n        "applicationState": "Running",\n        "user": "nobody",\n        "rejectedMessage": "",\n        "stateLog": [\n            {\n                "time": 1648741409145224000,\n                "applicationState": "Accepted"\n            },\n            {\n                "time": 1648741409145509400,\n                "applicationState": "Starting"\n            },\n            {\n                "time": 1648741409147432100,\n                "applicationState": "Running"\n            }\n        ],\n        "placeholderData": []\n    }\n]\n')),(0,o.yg)("h3",{id:"error-response-2"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"400 Bad Request")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 400,\n    "message": "Partition is missing in URL path. Please check the usage documentation",\n    "description": "Partition is missing in URL path. Please check the usage documentation"\n}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"nodes"},"Nodes"),(0,o.yg)("h3",{id:"partition-nodes"},"Partition nodes"),(0,o.yg)("p",null,"Fetch all Nodes associated with given Partition and displays general information about the nodes managed by YuniKorn.\nNode details include host and rack name, capacity, resources, utilization, and allocations."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/partition/{partitionName}/nodes")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-3"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("p",null,"Here you can see an example response from a 2-node cluster having 3 allocations."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "nodeID": "node-0001",\n        "hostName": "",\n        "rackName": "",\n        "capacity": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 14577000000,\n            "pods": 110,\n            "vcore": 10000\n        },\n        "allocated": {\n            "memory": 6000000000,\n            "vcore": 6000\n        },\n        "occupied": {\n            "memory": 154000000,\n            "vcore" :750\n        },\n        "available": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 6423000000,\n            "pods": 110,\n            "vcore": 1250\n        },\n        "utilized": {\n            "memory": 3,\n            "vcore": 13\n        },\n        "allocations": [\n            {\n                "allocationKey": "54e5d77b-f4c3-4607-8038-03c9499dd99d",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0001",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "08033f9a-4699-403c-9204-6333856b41bd",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "queueName": "root.default",\n                "nodeId": "node-0001",\n                "applicationId": "application-0001",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            },\n            {\n                "allocationKey": "deb12221-6b56-4fe9-87db-ebfadce9aa20",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0002",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "9af35d44-2d6f-40d1-b51d-758859e6b8a8",\n                "resource": {\n                    "memory": 4000000000,\n                    "vcore": 4000\n                },\n                "priority": "0",\n                "queueName": "root.default",\n                "nodeId": "node-0001",\n                "applicationId": "application-0002",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            }\n        ],\n        "schedulable": true\n    },\n    {\n        "nodeID": "node-0002",\n        "hostName": "",\n        "rackName": "",\n        "capacity": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 14577000000,\n            "pods": 110,\n            "vcore": 10000\n        },\n        "allocated": {\n            "memory": 2000000000,\n            "vcore": 2000\n        },\n        "occupied": {\n            "memory": 154000000,\n            "vcore" :750\n        },\n        "available": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 6423000000,\n            "pods": 110,\n            "vcore": 1250\n        },\n        "utilized": {\n            "memory": 8,\n            "vcore": 38\n        },\n        "allocations": [\n            {\n                "allocationKey": "af3bd2f3-31c5-42dd-8f3f-c2298ebdec81",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0001",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task1"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "96beeb45-5ed2-4c19-9a83-2ac807637b3b",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "queueName": "root.default",\n                "nodeId": "node-0002",\n                "applicationId": "application-0001",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            }\n        ],\n        "schedulable": true\n    }\n]\n')),(0,o.yg)("h3",{id:"error-response-3"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"400 Bad Request")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 400,\n    "message": "Partition is missing in URL path. Please check the usage documentation",\n    "description": "Partition is missing in URL path. Please check the usage documentation"\n}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"goroutines-info"},"Goroutines info"),(0,o.yg)("p",null,"Dumps the stack traces of the currently running goroutines."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/stack")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-4"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-text"},"goroutine 356 [running\n]:\ngithub.com/apache/yunikorn-core/pkg/webservice.getStackInfo.func1(0x30a0060,\n0xc003e900e0,\n0x2)\n    /yunikorn/go/pkg/mod/github.com/apache/yunikorn-core@v0.0.0-20200717041747-f3e1c760c714/pkg/webservice/handlers.go: 41 +0xab\ngithub.com/apache/yunikorn-core/pkg/webservice.getStackInfo(0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n    /yunikorn/go/pkg/mod/github.com/apache/yunikorn-core@v0.0.0-20200717041747-f3e1c760c714/pkg/webservice/handlers.go: 48 +0x71\nnet/http.HandlerFunc.ServeHTTP(0x2df0e10,\n0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n    /usr/local/go/src/net/http/server.go: 1995 +0x52\ngithub.com/apache/yunikorn-core/pkg/webservice.Logger.func1(0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n    /yunikorn/go/pkg/mod/github.com/apache/yunikorn-core@v0.0.0-20200717041747-f3e1c760c714/pkg/webservice/webservice.go: 65 +0xd4\nnet/http.HandlerFunc.ServeHTTP(0xc00003a570,\n0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n    /usr/local/go/src/net/http/server.go: 1995 +0x52\ngithub.com/gorilla/mux.(*Router).ServeHTTP(0xc00029cb40,\n0x30a0060,\n0xc003e900e0,\n0xc0063fee00)\n    /yunikorn/go/pkg/mod/github.com/gorilla/mux@v1.7.3/mux.go: 212 +0x140\nnet/http.serverHandler.ServeHTTP(0xc0000df520,\n0x30a0060,\n0xc003e900e0,\n0xc0063fee00)\n    /usr/local/go/src/net/http/server.go: 2774 +0xcf\nnet/http.(*conn).serve(0xc0000eab40,\n0x30a61a0,\n0xc003b74000)\n    /usr/local/go/src/net/http/server.go: 1878 +0x812\ncreated by net/http.(*Server).Serve\n    /usr/local/go/src/net/http/server.go: 2884 +0x4c5\n\ngoroutine 1 [chan receive,\n    26 minutes\n]:\nmain.main()\n    /yunikorn/pkg/shim/main.go: 52 +0x67a\n\ngoroutine 19 [syscall,\n    26 minutes\n]:\nos/signal.signal_recv(0x1096f91)\n    /usr/local/go/src/runtime/sigqueue.go: 139 +0x9f\nos/signal.loop()\n    /usr/local/go/src/os/signal/signal_unix.go: 23 +0x30\ncreated by os/signal.init.0\n    /usr/local/go/src/os/signal/signal_unix.go: 29 +0x4f\n\n...\n")),(0,o.yg)("h3",{id:"error-response-4"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"metrics"},"Metrics"),(0,o.yg)("p",null,"Endpoint to retrieve metrics from the Prometheus server.\nThe metrics are dumped with help messages and type information."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/metrics")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-5"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-text"},'# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.\n# TYPE go_gc_duration_seconds summary\ngo_gc_duration_seconds{quantile="0"} 2.567e-05\ngo_gc_duration_seconds{quantile="0.25"} 3.5727e-05\ngo_gc_duration_seconds{quantile="0.5"} 4.5144e-05\ngo_gc_duration_seconds{quantile="0.75"} 6.0024e-05\ngo_gc_duration_seconds{quantile="1"} 0.00022528\ngo_gc_duration_seconds_sum 0.021561648\ngo_gc_duration_seconds_count 436\n# HELP go_goroutines Number of goroutines that currently exist.\n# TYPE go_goroutines gauge\ngo_goroutines 82\n# HELP go_info Information about the Go environment.\n# TYPE go_info gauge\ngo_info{version="go1.12.17"} 1\n# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.\n# TYPE go_memstats_alloc_bytes gauge\ngo_memstats_alloc_bytes 9.6866248e+07\n\n...\n\n# HELP yunikorn_scheduler_vcore_nodes_usage Nodes resource usage, by resource name.\n# TYPE yunikorn_scheduler_vcore_nodes_usage gauge\nyunikorn_scheduler_vcore_nodes_usage{range="(10%, 20%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(20%,30%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(30%,40%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(40%,50%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(50%,60%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(60%,70%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(70%,80%]"} 1\nyunikorn_scheduler_vcore_nodes_usage{range="(80%,90%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(90%,100%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="[0,10%]"} 0\n')),(0,o.yg)("h2",{id:"configuration-validation"},"Configuration validation"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/validate-conf")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"POST")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-6"},"Success response"),(0,o.yg)("p",null,"Regardless whether the configuration is allowed or not if the server was able to process the request, it will yield a 200 HTTP status code."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("h4",{id:"allowed-configuration"},"Allowed configuration"),(0,o.yg)("p",null,"Sending the following simple configuration yields an accept"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n")),(0,o.yg)("p",null,"Reponse"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "allowed": true,\n    "reason": ""\n}\n')),(0,o.yg)("h4",{id:"disallowed-configuration"},"Disallowed configuration"),(0,o.yg)("p",null,'The following configuration is not allowed due to the "wrong_text" field put into the yaml file.'),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n  - wrong_text\n")),(0,o.yg)("p",null,"Reponse"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "allowed": false,\n    "reason": "yaml: unmarshal errors:\\n  line 7: cannot unmarshal !!str `wrong_text` into configs.PartitionConfig"\n}\n')),(0,o.yg)("h2",{id:"configuration-create"},"Configuration Create"),(0,o.yg)("p",null,"Endpoint to create scheduler configuration, but currently limited for configuration validation purpose alone"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/config")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"POST")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Query Params")," : "),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"dry_run")),(0,o.yg)("p",null,"Mandatory Parameter. Only dry_run=1 is allowed and can be used for configuration validation only, not for the actual config creation."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-7"},"Success response"),(0,o.yg)("p",null,"Regardless whether the configuration is allowed or not if the server was able to process the request, it will yield a 200 HTTP status code."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("h4",{id:"allowed-configuration-1"},"Allowed configuration"),(0,o.yg)("p",null,"Sending the following simple configuration yields an accept"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n")),(0,o.yg)("p",null,"Response"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "allowed": true,\n    "reason": ""\n}\n')),(0,o.yg)("h4",{id:"disallowed-configuration-1"},"Disallowed configuration"),(0,o.yg)("p",null,'The following configuration is not allowed due to the "wrong_text" field put into the yaml file.'),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n  - wrong_text\n")),(0,o.yg)("p",null,"Response"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "allowed": false,\n    "reason": "yaml: unmarshal errors:\\n  line 7: cannot unmarshal !!str `wrong_text` into configs.PartitionConfig"\n}\n')),(0,o.yg)("h3",{id:"error-response-5"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"400 Bad Request")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 400,\n    "message": "Dry run param is missing. Please check the usage documentation",\n    "description": "Dry run param is missing. Please check the usage documentation"\n}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"configuration"},"Configuration"),(0,o.yg)("p",null,"Endpoint to retrieve the current scheduler configuration"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/config")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-8"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content example")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n- name: default\n  queues:\n  - name: root\n    parent: true\n    submitacl: '*'\n  placementrules:\n  - name: tag\n    create: true\n    value: namespace\nchecksum: D75996C07D5167F41B33E27CCFAEF1D5C55BE3C00EE6526A7ABDF8435DB4078E\n")),(0,o.yg)("h2",{id:"configuration-update"},"Configuration update"),(0,o.yg)("p",null,"Endpoint to override scheduler configuration. "),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/config")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"PUT")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-9"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content example")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  -\n    name: default\n    placementrules:\n      - name: tag\n        value: namespace\n        create: true\n    queues:\n      - name: root\n        submitacl: '*'\n        properties:\n          application.sort.policy: stateaware\nchecksum: BAB3D76402827EABE62FA7E4C6BCF4D8DD9552834561B6B660EF37FED9299791\n")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Note:")," Updates must use a current running configuration as the base.\nThe base configuration is the configuration version that was retrieved earlier via a GET request and updated by the user.\nThe update request must contain the checksum of the ",(0,o.yg)("em",{parentName:"p"},"base")," configuration.\nIf the checksum provided in the update request differs from the currently running configuration checksum the update will be rejected."),(0,o.yg)("h3",{id:"failure-response"},"Failure response"),(0,o.yg)("p",null,"The configuration update can fail due to different reasons such as:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"invalid configuration,"),(0,o.yg)("li",{parentName:"ul"},"incorrect base checksum.")),(0,o.yg)("p",null,"In each case the transaction will be rejected, and the proper\nerror message will be returned as a response."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"409 Conflict")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Message example")," :  root queue must not have resource limits set"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content example")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'partitions:\n  -\n    name: default\n    placementrules:\n      - name: tag\n        value: namespace\n        create: true\n    queues:\n      - name: root\n        submitacl: \'*\'\n        resources:\n          guaranteed:\n            memory: "512M"\n            vcore: "1"\n        properties:\n          application.sort.policy: stateaware\nchecksum: BAB3D76402827EABE62FA7E4C6BCF4D8DD9552834561B6B660EF37FED9299791\n')),(0,o.yg)("h3",{id:"error-response-6"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"application-history"},"Application history"),(0,o.yg)("p",null,"Endpoint to retrieve historical data about the number of total applications by timestamp."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/history/apps")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-10"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "timestamp": 1595939966153460000,\n        "totalApplications": "1"\n    },\n    {\n        "timestamp": 1595940026152892000,\n        "totalApplications": "1"\n    },\n    {\n        "timestamp": 1595940086153799000,\n        "totalApplications": "2"\n    },\n    {\n        "timestamp": 1595940146154497000,\n        "totalApplications": "2"\n    },\n    {\n        "timestamp": 1595940206155187000,\n        "totalApplications": "2"\n    }\n]\n')),(0,o.yg)("h3",{id:"error-response-7"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"container-history"},"Container history"),(0,o.yg)("p",null,"Endpoint to retrieve historical data about the number of total containers by timestamp."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/history/containers")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-11"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "timestamp": 1595939966153460000,\n        "totalContainers": "1"\n    },\n    {\n        "timestamp": 1595940026152892000,\n        "totalContainers": "1"\n    },\n    {\n        "timestamp": 1595940086153799000,\n        "totalContainers": "3"\n    },\n    {\n        "timestamp": 1595940146154497000,\n        "totalContainers": "3"\n    },\n    {\n        "timestamp": 1595940206155187000,\n        "totalContainers": "3"\n    }\n]\n')),(0,o.yg)("h3",{id:"error-response-8"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n')),(0,o.yg)("h2",{id:"endpoint-healthcheck"},"Endpoint healthcheck"),(0,o.yg)("p",null,"Endpoint to retrieve historical data about critical logs, negative resource on node/cluster/app, ..."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/scheduler/healthcheck")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-12"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "Healthy": true,\n    "HealthChecks": [\n        {\n            "Name": "Scheduling errors",\n            "Succeeded": true,\n            "Description": "Check for scheduling error entries in metrics",\n            "DiagnosisMessage": "There were 0 scheduling errors logged in the metrics"\n        },\n        {\n            "Name": "Failed nodes",\n            "Succeeded": true,\n            "Description": "Check for failed nodes entries in metrics",\n            "DiagnosisMessage": "There were 0 failed nodes logged in the metrics"\n        },\n        {\n            "Name": "Negative resources",\n            "Succeeded": true,\n            "Description": "Check for negative resources in the partitions",\n            "DiagnosisMessage": "Partitions with negative resources: []"\n        },\n        {\n            "Name": "Negative resources",\n            "Succeeded": true,\n            "Description": "Check for negative resources in the nodes",\n            "DiagnosisMessage": "Nodes with negative resources: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if a node\'s allocated resource <= total resource of the node",\n            "DiagnosisMessage": "Nodes with inconsistent data: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if total partition resource == sum of the node resources from the partition",\n            "DiagnosisMessage": "Partitions with inconsistent data: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if node total resource = allocated resource + occupied resource + available resource",\n            "DiagnosisMessage": "Nodes with inconsistent data: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if node capacity >= allocated resources on the node",\n            "DiagnosisMessage": "Nodes with inconsistent data: []"\n        },\n        {\n            "Name": "Reservation check",\n            "Succeeded": true,\n            "Description": "Check the reservation nr compared to the number of nodes",\n            "DiagnosisMessage": "Reservation/node nr ratio: [0.000000]"\n        }\n    ]\n}\n')),(0,o.yg)("h2",{id:"retrieve-full-state-dump"},"Retrieve full state dump"),(0,o.yg)("p",null,"Endpoint to retrieve the following information in a single response:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"List of partitions"),(0,o.yg)("li",{parentName:"ul"},"List of applications (running and completed)"),(0,o.yg)("li",{parentName:"ul"},"Application history"),(0,o.yg)("li",{parentName:"ul"},"Nodes"),(0,o.yg)("li",{parentName:"ul"},"Utilization of nodes"),(0,o.yg)("li",{parentName:"ul"},"Generic cluster information"),(0,o.yg)("li",{parentName:"ul"},"Cluster utilization"),(0,o.yg)("li",{parentName:"ul"},"Container history"),(0,o.yg)("li",{parentName:"ul"},"Queues")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/fullstatedump")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"GET")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("h3",{id:"success-response-13"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("p",null,"The output of this REST query can be rather large and it is a combination of those which have already been demonstrated."),(0,o.yg)("h3",{id:"failure-response-1"},"Failure response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code"),": ",(0,o.yg)("inlineCode",{parentName:"p"},"500 Internal Server Error")),(0,o.yg)("h2",{id:"enable-or-disable-periodic-state-dump"},"Enable or disable periodic state dump"),(0,o.yg)("p",null,"Endpoint to enable a state dump to be written periodically. By default, it is 60 seconds. The output goes to a file called ",(0,o.yg)("inlineCode",{parentName:"p"},"yunikorn-state.txt"),". In the current version, the file is located in the current working directory of Yunikorn and it is not configurable."),(0,o.yg)("p",null,"Trying to enable or disable this feature more than once in a row results in an error."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"URL")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"/ws/v1/periodicstatedump/{switch}/{periodSeconds}")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Method")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"PUT")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Auth required")," : NO"),(0,o.yg)("p",null,"The value ",(0,o.yg)("inlineCode",{parentName:"p"},"{switch}")," can be either ",(0,o.yg)("inlineCode",{parentName:"p"},"disable")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"enable"),". The ",(0,o.yg)("inlineCode",{parentName:"p"},"{periodSeconds}")," defines how often state snapshots should be taken. It is expected to be a positive integer and only interpreted in case of ",(0,o.yg)("inlineCode",{parentName:"p"},"enable"),"."),(0,o.yg)("h3",{id:"success-response-14"},"Success response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code")," : ",(0,o.yg)("inlineCode",{parentName:"p"},"200 OK")),(0,o.yg)("h3",{id:"error-response-9"},"Error response"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Code"),": ",(0,o.yg)("inlineCode",{parentName:"p"},"400 Bad Request")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Content examples")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "status_code": 400,\n    "message": "required parameter enabled/disabled is missing",\n    "description": "required parameter enabled/disabled is missing"\n}\n')))}c.isMDXComponent=!0}}]);