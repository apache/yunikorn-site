"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[22152],{58860:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>d});var r=n(37953);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,d=p["".concat(l,".").concat(m)]||p[m]||h[m]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},82831:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(72994),o=(n(37953),n(58860));const a={id:"rn-0.9.0",title:"Release Announcement v0.9.0"},i=void 0,s={type:"mdx",permalink:"/release-announce/0.9.0",source:"@site/src/pages/release-announce/0.9.0.md",title:"Release Announcement v0.9.0",description:"\x3c!--",frontMatter:{id:"rn-0.9.0",title:"Release Announcement v0.9.0"}},l=[{value:"Overview",id:"overview",level:2},{value:"Highlights",id:"highlights",level:2},{value:"Resource Quota Management",id:"resource-quota-management",level:3},{value:"Job Ordering Policy: StateAware (optimized FIFO)",id:"job-ordering-policy-stateaware-optimized-fifo",level:3},{value:"Improvements for Auto-scaling",id:"improvements-for-auto-scaling",level:3},{value:"Event Cache System",id:"event-cache-system",level:3},{value:"More Comprehensive Web UI",id:"more-comprehensive-web-ui",level:3},{value:"Community",id:"community",level:2}],c={toc:l},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"release-announcement-v090"},"Release Announcement v0.9.0"),(0,o.yg)("p",null,"It gives us great pleasure to announce that the Apache YuniKorn (Incubating) community has voted to release 0.9.0. This is the 2nd release as an Apache Incubator project."),(0,o.yg)("p",null,"Apache YuniKorn (Incubating) is a standalone resource scheduler, designed for managing, and scheduling Big Data workloads on the container orchestration framework for on-prem and on-cloud use cases.",(0,o.yg)("br",{parentName:"p"}),"\n","This release has further improved the capabilities of resource scheduling and management on Kubernetes, along with some optimizations for running Apache Spark, Apache Flink workloads."),(0,o.yg)("h2",{id:"overview"},"Overview"),(0,o.yg)("p",null,"The Apache YuniKorn (Incubating) community has fixed over 130 JIRAs in this release: ",(0,o.yg)("a",{parentName:"p",href:"https://issues.apache.org/jira/issues/?filter=12348947"},"YuniKorn jiras fixed in 0.9.0")),(0,o.yg)("p",null,"Release manager: Wilfred Spiegelenburg"),(0,o.yg)("p",null,"Release date: 2020-08-28"),(0,o.yg)("h2",{id:"highlights"},"Highlights"),(0,o.yg)("h3",{id:"resource-quota-management"},"Resource Quota Management"),(0,o.yg)("p",null,"This version YuniKorn provides a seamless way to manage resource quota for a Kubernetes cluster, it can work as an alternative to the ",(0,o.yg)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/policy/resource-quotas/"},"namespace resource quota"),".",(0,o.yg)("br",{parentName:"p"}),"\n","There are 2 main advantages of using this feature comparing to the namespace resource quota:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"The namespace resource quota is counting resources at the admission phase, irrespective of whether the pod is using the resources or not. This can lead up to issues that the namespace resources could not be efficiently used."),(0,o.yg)("li",{parentName:"ol"},"The namespace resource quota is flat, it doesn't support hierarchy resource quota management.")),(0,o.yg)("p",null,"The resource quota admission controller rejects the pods if it could cause the namespace to exceed its quota, this increases the complexity of the client side code.",(0,o.yg)("br",{parentName:"p"}),"\n","By using the resource quota management provided by YuniKorn, it is more efficient, seamlessly setup and it provides the job queue to handle common scheduling ordering requirements."),(0,o.yg)("h3",{id:"job-ordering-policy-stateaware-optimized-fifo"},"Job Ordering Policy: StateAware (optimized FIFO)"),(0,o.yg)("p",null,"The StateAware app sorting policy orders jobs in a queue in FIFO order, and schedules them one by one on conditions. The condition is to wait for the application to enter a runnable state. This avoids the common race condition while submitting lots of batch jobs, e.g Spark, to a single namespace (or cluster). By enforcing the certain ordering of jobs, it also improves the scheduling of jobs to be more predictable. More explanation of this feature can be found in doc here."),(0,o.yg)("h3",{id:"improvements-for-auto-scaling"},"Improvements for Auto-scaling"),(0,o.yg)("p",null,"In this release, YuniKorn has been tested heavily to work nicely with the Kubernetes cluster-autoscaler. It brings the maximum elasticity to the Kubernetes cluster by working efficiently with the cluster-autoscaler. Some bugs are fixed and some improvements are done in this release."),(0,o.yg)("h3",{id:"event-cache-system"},"Event Cache System"),(0,o.yg)("p",null,"In this release, an efficient event cache system is added into the scheduler. This system caches some key scheduling events in a memory store and publishes them to the Kubernetes event system when needed. More scheduling events are visible directly from Kubernetes by using kubectl command. This helps to improve the usability and debuggability a lot."),(0,o.yg)("h3",{id:"more-comprehensive-web-ui"},"More Comprehensive Web UI"),(0,o.yg)("p",null,'YuniKorn UI provides a better centralized view for resource management. A new "nodes" page has been added to the UI, to display the detailed nodes info in the cluster.',(0,o.yg)("br",{parentName:"p"}),"\n","The apps page has been enhanced, it now provides a search box to search apps by queue name or application ID."),(0,o.yg)("h2",{id:"community"},"Community"),(0,o.yg)("p",null,"The Apache YuniKorn community is pleased to welcome a new committer Gao Li. We would love to see more committers joining the community and help to shape the project. In the past few months, we continue to have bi-weekly community meetings in 2 different time zones. Thanks for all the community folks who joined these meetings and provided feedback and valuable ideas."),(0,o.yg)("p",null,"Thanks to the following contributors who directly contributed code to the project: Adam Antal, Akhil Puthenveettil Balan, Ayub Khan Pathan, Kinga Marton, Manikandan R, Sunil Govindan, Tao Yang, Tingyao Huang, Tim Rots, Wangda Tan, Wanqiang Ji, Weiwei Yang, Wilfred Spiegelenburg."))}p.isMDXComponent=!0}}]);