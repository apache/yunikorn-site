"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73171],{22822:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var r=s(13274),o=s(1780);const i={id:"scheduler",title:"Scheduler"},a="Overview",t={id:"api/scheduler",title:"Scheduler",description:"\x3c!--",source:"@site/versioned_docs/version-1.1.0/api/scheduler.md",sourceDirName:"api",slug:"/api/scheduler",permalink:"/docs/1.1.0/api/scheduler",draft:!1,unlisted:!1,tags:[],version:"1.1.0",frontMatter:{id:"scheduler",title:"Scheduler"},sidebar:"docs",previous:{title:"Cluster",permalink:"/docs/1.1.0/api/cluster"},next:{title:"System",permalink:"/docs/1.1.0/api/system"}},l={},c=[{value:"Partitions",id:"partitions",level:2},{value:"Success response",id:"success-response",level:3},{value:"Error response",id:"error-response",level:3},{value:"Queues",id:"queues",level:2},{value:"Partition queues",id:"partition-queues",level:3},{value:"Success response",id:"success-response-1",level:3},{value:"Error response",id:"error-response-1",level:3},{value:"Applications",id:"applications",level:2},{value:"Queue applications",id:"queue-applications",level:3},{value:"Success response",id:"success-response-2",level:3},{value:"Error response",id:"error-response-2",level:3},{value:"Application",id:"application",level:2},{value:"Queue application",id:"queue-application",level:3},{value:"Success response",id:"success-response-3",level:3},{value:"Error response",id:"error-response-3",level:3},{value:"Nodes",id:"nodes",level:2},{value:"Partition nodes",id:"partition-nodes",level:3},{value:"Success response",id:"success-response-4",level:3},{value:"Error response",id:"error-response-4",level:3},{value:"Goroutines info",id:"goroutines-info",level:2},{value:"Success response",id:"success-response-5",level:3},{value:"Error response",id:"error-response-5",level:3},{value:"Metrics",id:"metrics",level:2},{value:"Success response",id:"success-response-6",level:3},{value:"Configuration validation",id:"configuration-validation",level:2},{value:"Success response",id:"success-response-7",level:3},{value:"Allowed configuration",id:"allowed-configuration",level:4},{value:"Disallowed configuration",id:"disallowed-configuration",level:4},{value:"Configuration Create",id:"configuration-create",level:2},{value:"Success response",id:"success-response-8",level:3},{value:"Allowed configuration",id:"allowed-configuration-1",level:4},{value:"Disallowed configuration",id:"disallowed-configuration-1",level:4},{value:"Error response",id:"error-response-6",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Success response",id:"success-response-9",level:3},{value:"Configuration update",id:"configuration-update",level:2},{value:"Success response",id:"success-response-10",level:3},{value:"Failure response",id:"failure-response",level:3},{value:"Error response",id:"error-response-7",level:3},{value:"Application history",id:"application-history",level:2},{value:"Success response",id:"success-response-11",level:3},{value:"Error response",id:"error-response-8",level:3},{value:"Container history",id:"container-history",level:2},{value:"Success response",id:"success-response-12",level:3},{value:"Error response",id:"error-response-9",level:3},{value:"Endpoint healthcheck",id:"endpoint-healthcheck",level:2},{value:"Success response",id:"success-response-13",level:3},{value:"Retrieve full state dump",id:"retrieve-full-state-dump",level:2},{value:"Success response",id:"success-response-14",level:3},{value:"Failure response",id:"failure-response-1",level:3},{value:"Enable or disable periodic state dump",id:"enable-or-disable-periodic-state-dump",level:2},{value:"Success response",id:"success-response-15",level:3},{value:"Error response",id:"error-response-10",level:3}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The scheduler REST API returns information about various objects used by the YuniKorn Scheduler."}),"\n",(0,r.jsxs)(n.p,{children:["Many of these APIs return collections of resources. Internally, all resources are represented as raw\n64-bit signed integer types. When interpreting responses from the REST API, resources of type ",(0,r.jsx)(n.code,{children:"memory"}),"\nare returned in units of bytes while resources of type ",(0,r.jsx)(n.code,{children:"vcore"})," are returned in units of millicores\n(thousands of a core). All other resource types have no specific unit assigned."]}),"\n",(0,r.jsxs)(n.p,{children:["Under the ",(0,r.jsx)(n.code,{children:"allocations"})," field in the response content for the app/node-related calls in the following spec, ",(0,r.jsx)(n.code,{children:"placeholderUsed"})," refers to whether or not the allocation is a replacement for a placeholder. If true, ",(0,r.jsx)(n.code,{children:"requestTime"})," is the creation time of its placeholder allocation, otherwise it's that of the allocation's ask. ",(0,r.jsx)(n.code,{children:"allocationTime"})," is the creation time of the allocation, and ",(0,r.jsx)(n.code,{children:"allocationDelay"})," is simply the difference between ",(0,r.jsx)(n.code,{children:"allocationTime"})," and ",(0,r.jsx)(n.code,{children:"requestTime"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"partitions",children:"Partitions"}),"\n",(0,r.jsx)(n.p,{children:"Displays general information about the partition like name, state, capacity, used capacity, utilization, and node sorting policy."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/partitions"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "clusterId": "mycluster",\n        "name": "default",\n        "state": "Active",\n        "lastStateTransitionTime": 1649167576110754000,\n        "capacity": {\n            "capacity": {\n                "ephemeral-storage": 188176871424,\n                "hugepages-1Gi": 0,\n                "hugepages-2Mi": 0,\n                "memory": 1000000000,\n                "pods": 330,\n                "vcore": 1000\n            },\n            "usedCapacity": {\n                "memory": 800000000,\n                "vcore": 500\n            },\n            "utilization": {\n                "memory": 80,\n                "vcore": 50\n            }\n        },\n        "nodeSortingPolicy": {\n            "type": "fair",\n            "resourceWeights": {\n                "memory": 1.5,\n                "vcore": 1.3\n            }\n        },\n        "applications": {\n            "New": 5,\n            "Pending": 5,\n            "total": 10\n        }\n    },\n    {\n        "clusterId": "mycluster",\n        "name": "gpu",\n        "state": "Active",\n        "lastStateTransitionTime": 1649167576111236000,\n        "capacity": {\n            "capacity": {\n                "memory": 2000000000,\n                "vcore": 2000\n            },\n            "usedCapacity": {\n                "memory": 500000000,\n                "vcore": 300\n            },\n            "utilization": {\n                "memory": 25,\n                "vcore": 15\n            }\n        },\n        "nodeSortingPolicy": {\n            "type": "binpacking",\n            "resourceWeights": {\n                "memory": 0,\n                "vcore": 4.11\n            }\n        },\n        "applications": {\n            "New": 5,\n            "Running": 10,\n            "Pending": 5,\n            "total": 20\n        }\n    }\n]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"queues",children:"Queues"}),"\n",(0,r.jsx)(n.h3,{id:"partition-queues",children:"Partition queues"}),"\n",(0,r.jsx)(n.p,{children:"Fetch all Queues associated with given Partition and displays general information about the queues like name, status, capacities and properties.\nThe queues' hierarchy is kept in the response json."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/partition/{partitionName}/queues"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-1",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsxs)(n.p,{children:["For the default queue hierarchy (only ",(0,r.jsx)(n.code,{children:"root.default"})," leaf queue exists) a similar response to the following is sent back to the client:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "queuename": "root",\n        "status": "Active",\n        "maxResource": {\n            "ephemeral-storage": 188176871424,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 8000000000,\n            "pods": 330,\n            "vcore": 8000\n        },\n        "guaranteedResource": {\n            "memory": 54000000,\n            "vcore": 80\n        },\n        "allocatedResource": {\n            "memory": 54000000,\n            "vcore": 80\n        },\n        "isLeaf": "false",\n        "isManaged": "false",\n        "properties": {\n            "application.sort.policy": "stateaware"\n        },\n        "parent": "",\n        "template": {\n            "maxResource": {\n                "memory": 8000000000,\n                "vcore": 8000\n            },\n            "guaranteedResource": {\n                "memory": 54000000,\n                "vcore": 80\n            },\n            "properties": {\n                "application.sort.policy": "stateaware"\n            }\n        },\n        "partition": "default",\n        "children": [\n            {\n                "queuename": "root.default",\n                "status": "Active",\n                "maxResource": {\n                    "memory": 8000000000,\n                    "vcore": 8000\n                },\n                "guaranteedResource": {\n                    "memory": 54000000,\n                    "vcore": 80\n                },\n                "allocatedResource": {\n                    "memory": 54000000,\n                    "vcore": 80\n                },\n                "isLeaf": "true",\n                "isManaged": "false",\n                "properties": {\n                    "application.sort.policy": "stateaware"\n                },\n                "parent": "root",\n                "template": null,\n                "children": [],\n                "absUsedCapacity": {\n                    "memory": 1,\n                    "vcore": 0\n                }\n            }\n        ],\n        "absUsedCapacity": {\n            "memory": 1,\n            "vcore": 0\n        }\n    } \n]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-1",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"applications",children:"Applications"}),"\n",(0,r.jsx)(n.h3,{id:"queue-applications",children:"Queue applications"}),"\n",(0,r.jsx)(n.p,{children:"Fetch all Applications for the given Partition/Queue combination and displays general information about the applications like used resources, queue name, submission time and allocations."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/partition/{partitionName}/queue/{queueName}/applications"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-2",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.p,{children:"In the example below there are three allocations belonging to two applications, one with a pending request."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "applicationID": "application-0001",\n        "usedResource": {\n            "memory": 4000000000,\n            "vcore": 4000\n        },\n        "maxUsedResource": {\n            "memory": 4000000000,\n            "vcore": 4000\n        },\n        "partition": "default",\n        "queueName": "root.default",\n        "submissionTime": 1648754032076020293,\n        "requests": [\n            {\n                "allocationKey": "f137fab6-3cfa-4536-93f7-bfff92689382",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0001",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task2"\n                },\n                "requestTime": 16487540320812345678,\n                "resource": {\n                    "memory": 4000000000,\n                    "vcore": 4000\n                },\n                "pendingCount": 1,\n                "priority": "0",\n                "requiredNodeId": "",\n                "applicationId": "application-0001",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderTimeout": 0,\n                "taskGroupName": "",\n                "allocationLog": [\n                    {\n                        "message": "node(s) didn\'t match Pod\'s node affinity, node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn\'t tolerate",\n                        "lastOccurrence": 16487540320812346001,\n                        "count": 81\n                    },\n                    {\n                        "message": "node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn\'t tolerate, node(s) didn\'t match Pod\'s node affinity",\n                        "lastOccurrence": 16487540320812346002,\n                        "count": 504\n                    },\n                    {\n                        "message": "node(s) didn\'t match Pod\'s node affinity",\n                        "lastOccurrence": 16487540320812346003,\n                        "count": 1170\n                    }\n                ]\n            }\n        ],\n        "allocations": [\n            {\n                "allocationKey": "deb12221-6b56-4fe9-87db-ebfadce9aa20",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0001",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "9af35d44-2d6f-40d1-b51d-758859e6b8a8",\n                "resource": {\n                    "memory": 4000000000,\n                    "vcore": 4000\n                },\n                "priority": "0",\n                "nodeId": "node-0001",\n                "applicationId": "application-0001",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": true\n            }\n        ],\n        "applicationState": "Running",\n        "user": "nobody",\n        "rejectedMessage": "",\n        "stateLog": [\n            {\n                "time": 1648741409145224000,\n                "applicationState": "Accepted"\n            },\n            {\n                "time": 1648741409145509400,\n                "applicationState": "Starting"\n            },\n            {\n                "time": 1648741409147432100,\n                "applicationState": "Running"\n            }\n        ],\n        "placeholderData": [\n            {\n                "taskGroupName": "task-group-example",\n                "count": 2,\n                "minResource": {\n                    "memory": 1000000000,\n                    "vcore": 100\n                },\n                "replaced": 1,\n                "timedout": 1\n            }\n        ]\n    },\n    {\n        "applicationID": "application-0002",\n        "usedResource": {\n            "memory": 4000000000,\n            "vcore": 4000\n        },\n        "maxUsedResource": {\n            "memory": 4000000000,\n            "vcore": 4000\n        },\n        "partition": "default",\n        "queueName": "root.default",\n        "submissionTime": 1648754032076020293,\n        "requests": [],\n        "allocations": [\n            {\n                "allocationKey": "54e5d77b-f4c3-4607-8038-03c9499dd99d",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0002",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "08033f9a-4699-403c-9204-6333856b41bd",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "nodeId": "node-0001",\n                "applicationId": "application-0002",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            },\n            {\n                "allocationKey": "af3bd2f3-31c5-42dd-8f3f-c2298ebdec81",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0002",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task1"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "96beeb45-5ed2-4c19-9a83-2ac807637b3b",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "nodeId": "node-0002",\n                "applicationId": "application-0002",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            }\n        ],\n        "applicationState": "Running",\n        "user": "nobody",\n        "rejectedMessage": "",\n        "stateLog": [\n            {\n                "time": 1648741409145224000,\n                "applicationState": "Accepted"\n            },\n            {\n                "time": 1648741409145509400,\n                "applicationState": "Starting"\n            },\n            {\n                "time": 1648741409147432100,\n                "applicationState": "Running"\n            }\n        ],\n        "placeholderData": []\n    }\n]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-2",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"application",children:"Application"}),"\n",(0,r.jsx)(n.h3,{id:"queue-application",children:"Queue application"}),"\n",(0,r.jsx)(n.p,{children:"Fetch an Application given a Partition, Queue and Application ID and displays general information about the application like used resources, queue name, submission time and allocations."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/partition/{partitionName}/queue/{queueName}/application/{appId}"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-3",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "applicationID": "application-0001",\n    "usedResource": {\n        "memory": 4000000000,\n        "vcore": 4000\n    },\n    "maxUsedResource": {\n        "memory": 4000000000,\n        "vcore": 4000\n    },\n    "partition": "default",\n    "queueName": "root.default",\n    "submissionTime": 1648754032076020293,\n    "requests": [\n        {\n            "allocationKey": "f137fab6-3cfa-4536-93f7-bfff92689382",\n            "allocationTags": {\n                "kubernetes.io/label/app": "sleep",\n                "kubernetes.io/label/applicationId": "application-0001",\n                "kubernetes.io/label/queue": "root.default",\n                "kubernetes.io/meta/namespace": "default",\n                "kubernetes.io/meta/podName": "task2"\n            },\n            "requestTime": 16487540320812345678,\n            "resource": {\n                "memory": 4000000000,\n                "vcore": 4000\n            },\n            "pendingCount": 1,\n            "priority": "0",\n            "requiredNodeId": "",\n            "applicationId": "application-0001",\n            "partition": "default",\n            "placeholder": false,\n            "placeholderTimeout": 0,\n            "taskGroupName": "",\n            "allocationLog": [\n                {\n                    "message": "node(s) didn\'t match Pod\'s node affinity, node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn\'t tolerate",\n                    "lastOccurrence": 16487540320812346001,\n                    "count": 81\n                },\n                {\n                    "message": "node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn\'t tolerate, node(s) didn\'t match Pod\'s node affinity",\n                    "lastOccurrence": 16487540320812346002,\n                    "count": 504\n                },\n                {\n                    "message": "node(s) didn\'t match Pod\'s node affinity",\n                    "lastOccurrence": 16487540320812346003,\n                    "count": 1170\n                }\n            ]\n        }\n    ],\n    "allocations": [\n        {\n            "allocationKey": "deb12221-6b56-4fe9-87db-ebfadce9aa20",\n            "allocationTags": {\n                "kubernetes.io/label/app": "sleep",\n                "kubernetes.io/label/applicationId": "application-0001",\n                "kubernetes.io/label/queue": "root.default",\n                "kubernetes.io/meta/namespace": "default",\n                "kubernetes.io/meta/podName": "task0"\n            },\n            "requestTime": 1648754034098912461,\n            "allocationTime": 1648754035973982920,\n            "allocationDelay": 1875070459,\n            "uuid": "9af35d44-2d6f-40d1-b51d-758859e6b8a8",\n            "resource": {\n                "memory": 4000000000,\n                "vcore": 4000\n            },\n            "priority": "0",\n            "nodeId": "node-0001",\n            "applicationId": "application-0001",\n            "partition": "default",\n            "placeholder": false,\n            "placeholderUsed": true\n        }\n    ],\n    "applicationState": "Running",\n    "user": "nobody",\n    "rejectedMessage": "",\n    "stateLog": [\n        {\n            "time": 1648741409145224000,\n            "applicationState": "Accepted"\n        },\n        {\n            "time": 1648741409145509400,\n            "applicationState": "Starting"\n        },\n        {\n            "time": 1648741409147432100,\n            "applicationState": "Running"\n        }\n    ],\n    "placeholderData": [\n        {\n            "taskGroupName": "task-group-example",\n            "count": 2,\n            "minResource": {\n                "memory": 1000000000,\n                "vcore": 100\n            },\n            "replaced": 1,\n            "timedout": 1\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-3",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"nodes",children:"Nodes"}),"\n",(0,r.jsx)(n.h3,{id:"partition-nodes",children:"Partition nodes"}),"\n",(0,r.jsx)(n.p,{children:"Fetch all Nodes associated with given Partition and displays general information about the nodes managed by YuniKorn.\nNode details include host and rack name, capacity, resources, utilization, and allocations."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/partition/{partitionName}/nodes"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-4",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.p,{children:"Here you can see an example response from a 2-node cluster having 3 allocations."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "nodeID": "node-0001",\n        "hostName": "",\n        "rackName": "",\n        "capacity": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 14577000000,\n            "pods": 110,\n            "vcore": 10000\n        },\n        "allocated": {\n            "memory": 6000000000,\n            "vcore": 6000\n        },\n        "occupied": {\n            "memory": 154000000,\n            "vcore" :750\n        },\n        "available": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 6423000000,\n            "pods": 110,\n            "vcore": 1250\n        },\n        "utilized": {\n            "memory": 3,\n            "vcore": 13\n        },\n        "allocations": [\n            {\n                "allocationKey": "54e5d77b-f4c3-4607-8038-03c9499dd99d",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0001",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "08033f9a-4699-403c-9204-6333856b41bd",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "nodeId": "node-0001",\n                "applicationId": "application-0001",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            },\n            {\n                "allocationKey": "deb12221-6b56-4fe9-87db-ebfadce9aa20",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0002",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task0"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "9af35d44-2d6f-40d1-b51d-758859e6b8a8",\n                "resource": {\n                    "memory": 4000000000,\n                    "vcore": 4000\n                },\n                "priority": "0",\n                "nodeId": "node-0001",\n                "applicationId": "application-0002",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            }\n        ],\n        "schedulable": true\n    },\n    {\n        "nodeID": "node-0002",\n        "hostName": "",\n        "rackName": "",\n        "capacity": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 14577000000,\n            "pods": 110,\n            "vcore": 10000\n        },\n        "allocated": {\n            "memory": 2000000000,\n            "vcore": 2000\n        },\n        "occupied": {\n            "memory": 154000000,\n            "vcore" :750\n        },\n        "available": {\n            "ephemeral-storage": 75850798569,\n            "hugepages-1Gi": 0,\n            "hugepages-2Mi": 0,\n            "memory": 6423000000,\n            "pods": 110,\n            "vcore": 1250\n        },\n        "utilized": {\n            "memory": 8,\n            "vcore": 38\n        },\n        "allocations": [\n            {\n                "allocationKey": "af3bd2f3-31c5-42dd-8f3f-c2298ebdec81",\n                "allocationTags": {\n                    "kubernetes.io/label/app": "sleep",\n                    "kubernetes.io/label/applicationId": "application-0001",\n                    "kubernetes.io/label/queue": "root.default",\n                    "kubernetes.io/meta/namespace": "default",\n                    "kubernetes.io/meta/podName": "task1"\n                },\n                "requestTime": 1648754034098912461,\n                "allocationTime": 1648754035973982920,\n                "allocationDelay": 1875070459,\n                "uuid": "96beeb45-5ed2-4c19-9a83-2ac807637b3b",\n                "resource": {\n                    "memory": 2000000000,\n                    "vcore": 2000\n                },\n                "priority": "0",\n                "nodeId": "node-0002",\n                "applicationId": "application-0001",\n                "partition": "default",\n                "placeholder": false,\n                "placeholderUsed": false\n            }\n        ],\n        "schedulable": true\n    }\n]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-4",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"goroutines-info",children:"Goroutines info"}),"\n",(0,r.jsx)(n.p,{children:"Dumps the stack traces of the currently running goroutines."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/stack"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-5",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"goroutine 356 [running\n]:\ngithub.com/apache/yunikorn-core/pkg/webservice.getStackInfo.func1(0x30a0060,\n0xc003e900e0,\n0x2)\n\t/yunikorn/go/pkg/mod/github.com/apache/yunikorn-core@v0.0.0-20200717041747-f3e1c760c714/pkg/webservice/handlers.go: 41 +0xab\ngithub.com/apache/yunikorn-core/pkg/webservice.getStackInfo(0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n\t/yunikorn/go/pkg/mod/github.com/apache/yunikorn-core@v0.0.0-20200717041747-f3e1c760c714/pkg/webservice/handlers.go: 48 +0x71\nnet/http.HandlerFunc.ServeHTTP(0x2df0e10,\n0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n\t/usr/local/go/src/net/http/server.go: 1995 +0x52\ngithub.com/apache/yunikorn-core/pkg/webservice.Logger.func1(0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n\t/yunikorn/go/pkg/mod/github.com/apache/yunikorn-core@v0.0.0-20200717041747-f3e1c760c714/pkg/webservice/webservice.go: 65 +0xd4\nnet/http.HandlerFunc.ServeHTTP(0xc00003a570,\n0x30a0060,\n0xc003e900e0,\n0xc00029ba00)\n\t/usr/local/go/src/net/http/server.go: 1995 +0x52\ngithub.com/gorilla/mux.(*Router).ServeHTTP(0xc00029cb40,\n0x30a0060,\n0xc003e900e0,\n0xc0063fee00)\n\t/yunikorn/go/pkg/mod/github.com/gorilla/mux@v1.7.3/mux.go: 212 +0x140\nnet/http.serverHandler.ServeHTTP(0xc0000df520,\n0x30a0060,\n0xc003e900e0,\n0xc0063fee00)\n\t/usr/local/go/src/net/http/server.go: 2774 +0xcf\nnet/http.(*conn).serve(0xc0000eab40,\n0x30a61a0,\n0xc003b74000)\n\t/usr/local/go/src/net/http/server.go: 1878 +0x812\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/net/http/server.go: 2884 +0x4c5\n\ngoroutine 1 [chan receive,\n\t26 minutes\n]:\nmain.main()\n\t/yunikorn/pkg/shim/main.go: 52 +0x67a\n\ngoroutine 19 [syscall,\n\t26 minutes\n]:\nos/signal.signal_recv(0x1096f91)\n\t/usr/local/go/src/runtime/sigqueue.go: 139 +0x9f\nos/signal.loop()\n\t/usr/local/go/src/os/signal/signal_unix.go: 23 +0x30\ncreated by os/signal.init.0\n\t/usr/local/go/src/os/signal/signal_unix.go: 29 +0x4f\n\n...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-5",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"metrics",children:"Metrics"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to retrieve metrics from the Prometheus server.\nThe metrics are dumped with help messages and type information."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/metrics"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-6",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.\n# TYPE go_gc_duration_seconds summary\ngo_gc_duration_seconds{quantile="0"} 2.567e-05\ngo_gc_duration_seconds{quantile="0.25"} 3.5727e-05\ngo_gc_duration_seconds{quantile="0.5"} 4.5144e-05\ngo_gc_duration_seconds{quantile="0.75"} 6.0024e-05\ngo_gc_duration_seconds{quantile="1"} 0.00022528\ngo_gc_duration_seconds_sum 0.021561648\ngo_gc_duration_seconds_count 436\n# HELP go_goroutines Number of goroutines that currently exist.\n# TYPE go_goroutines gauge\ngo_goroutines 82\n# HELP go_info Information about the Go environment.\n# TYPE go_info gauge\ngo_info{version="go1.12.17"} 1\n# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.\n# TYPE go_memstats_alloc_bytes gauge\ngo_memstats_alloc_bytes 9.6866248e+07\n\n...\n\n# HELP yunikorn_scheduler_vcore_nodes_usage Nodes resource usage, by resource name.\n# TYPE yunikorn_scheduler_vcore_nodes_usage gauge\nyunikorn_scheduler_vcore_nodes_usage{range="(10%, 20%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(20%,30%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(30%,40%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(40%,50%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(50%,60%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(60%,70%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(70%,80%]"} 1\nyunikorn_scheduler_vcore_nodes_usage{range="(80%,90%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="(90%,100%]"} 0\nyunikorn_scheduler_vcore_nodes_usage{range="[0,10%]"} 0\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-validation",children:"Configuration validation"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/validate-conf"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-7",children:"Success response"}),"\n",(0,r.jsx)(n.p,{children:"Regardless whether the configuration is allowed or not if the server was able to process the request, it will yield a 200 HTTP status code."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.h4,{id:"allowed-configuration",children:"Allowed configuration"}),"\n",(0,r.jsx)(n.p,{children:"Sending the following simple configuration yields an accept"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reponse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "allowed": true,\n    "reason": ""\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"disallowed-configuration",children:"Disallowed configuration"}),"\n",(0,r.jsx)(n.p,{children:'The following configuration is not allowed due to the "wrong_text" field put into the yaml file.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n  - wrong_text\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reponse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "allowed": false,\n    "reason": "yaml: unmarshal errors:\\n  line 7: cannot unmarshal !!str `wrong_text` into configs.PartitionConfig"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-create",children:"Configuration Create"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to create scheduler configuration, but currently limited for configuration validation purpose alone"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/config"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Query Params"})," :"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"dry_run"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Mandatory Parameter. Only dry_run=1 is allowed and can be used for configuration validation only, not for the actual config creation."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-8",children:"Success response"}),"\n",(0,r.jsx)(n.p,{children:"Regardless whether the configuration is allowed or not if the server was able to process the request, it will yield a 200 HTTP status code."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.h4,{id:"allowed-configuration-1",children:"Allowed configuration"}),"\n",(0,r.jsx)(n.p,{children:"Sending the following simple configuration yields an accept"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n"})}),"\n",(0,r.jsx)(n.p,{children:"Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "allowed": true,\n    "reason": ""\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"disallowed-configuration-1",children:"Disallowed configuration"}),"\n",(0,r.jsx)(n.p,{children:'The following configuration is not allowed due to the "wrong_text" field put into the yaml file.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"partitions:\n  - name: default\n    queues:\n      - name: root\n        queues:\n          - name: test\n  - wrong_text\n"})}),"\n",(0,r.jsx)(n.p,{children:"Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "allowed": false,\n    "reason": "yaml: unmarshal errors:\\n  line 7: cannot unmarshal !!str `wrong_text` into configs.PartitionConfig"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-6",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"400 Bad Request"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 400,\n    "message": "Dry run param is missing. Please check the usage documentation",\n    "description": "Dry run param is missing. Please check the usage documentation"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to retrieve the current scheduler configuration"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/config"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-9",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"partitions:\n- name: default\n  queues:\n  - name: root\n    parent: true\n    submitacl: '*'\n  placementrules:\n  - name: tag\n    create: true\n    value: namespace\nchecksum: D75996C07D5167F41B33E27CCFAEF1D5C55BE3C00EE6526A7ABDF8435DB4078E\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-update",children:"Configuration update"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to override scheduler configuration."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/config"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"PUT"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-10",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"partitions:\n  -\n    name: default\n    placementrules:\n      - name: tag\n        value: namespace\n        create: true\n    queues:\n      - name: root\n        submitacl: '*'\n        properties:\n          application.sort.policy: stateaware\nchecksum: BAB3D76402827EABE62FA7E4C6BCF4D8DD9552834561B6B660EF37FED9299791\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Updates must use a current running configuration as the base.\nThe base configuration is the configuration version that was retrieved earlier via a GET request and updated by the user.\nThe update request must contain the checksum of the ",(0,r.jsx)(n.em,{children:"base"})," configuration.\nIf the checksum provided in the update request differs from the currently running configuration checksum the update will be rejected."]}),"\n",(0,r.jsx)(n.h3,{id:"failure-response",children:"Failure response"}),"\n",(0,r.jsx)(n.p,{children:"The configuration update can fail due to different reasons such as:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"invalid configuration,"}),"\n",(0,r.jsx)(n.li,{children:"incorrect base checksum."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In each case the transaction will be rejected, and the proper\nerror message will be returned as a response."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"409 Conflict"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Message example"})," :  root queue must not have resource limits set"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'partitions:\n  -\n    name: default\n    placementrules:\n      - name: tag\n        value: namespace\n        create: true\n    queues:\n      - name: root\n        submitacl: \'*\'\n        resources:\n          guaranteed:\n            memory: "512M"\n            vcore: "1"\n        properties:\n          application.sort.policy: stateaware\nchecksum: BAB3D76402827EABE62FA7E4C6BCF4D8DD9552834561B6B660EF37FED9299791\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-7",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"application-history",children:"Application history"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to retrieve historical data about the number of total applications by timestamp."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/history/apps"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-11",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "timestamp": 1595939966153460000,\n        "totalApplications": "1"\n    },\n    {\n        "timestamp": 1595940026152892000,\n        "totalApplications": "1"\n    },\n    {\n        "timestamp": 1595940086153799000,\n        "totalApplications": "2"\n    },\n    {\n        "timestamp": 1595940146154497000,\n        "totalApplications": "2"\n    },\n    {\n        "timestamp": 1595940206155187000,\n        "totalApplications": "2"\n    }\n]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-8",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"container-history",children:"Container history"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to retrieve historical data about the number of total containers by timestamp."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/history/containers"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-12",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "timestamp": 1595939966153460000,\n        "totalContainers": "1"\n    },\n    {\n        "timestamp": 1595940026152892000,\n        "totalContainers": "1"\n    },\n    {\n        "timestamp": 1595940086153799000,\n        "totalContainers": "3"\n    },\n    {\n        "timestamp": 1595940146154497000,\n        "totalContainers": "3"\n    },\n    {\n        "timestamp": 1595940206155187000,\n        "totalContainers": "3"\n    }\n]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-9",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 500,\n    "message": "system error message. for example, json: invalid UTF-8 in string: ..",\n    "description": "system error message. for example, json: invalid UTF-8 in string: .."\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"endpoint-healthcheck",children:"Endpoint healthcheck"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to retrieve historical data about critical logs, negative resource on node/cluster/app, ..."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/scheduler/healthcheck"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-13",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "Healthy": true,\n    "HealthChecks": [\n        {\n            "Name": "Scheduling errors",\n            "Succeeded": true,\n            "Description": "Check for scheduling error entries in metrics",\n            "DiagnosisMessage": "There were 0 scheduling errors logged in the metrics"\n        },\n        {\n            "Name": "Failed nodes",\n            "Succeeded": true,\n            "Description": "Check for failed nodes entries in metrics",\n            "DiagnosisMessage": "There were 0 failed nodes logged in the metrics"\n        },\n        {\n            "Name": "Negative resources",\n            "Succeeded": true,\n            "Description": "Check for negative resources in the partitions",\n            "DiagnosisMessage": "Partitions with negative resources: []"\n        },\n        {\n            "Name": "Negative resources",\n            "Succeeded": true,\n            "Description": "Check for negative resources in the nodes",\n            "DiagnosisMessage": "Nodes with negative resources: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if a node\'s allocated resource <= total resource of the node",\n            "DiagnosisMessage": "Nodes with inconsistent data: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if total partition resource == sum of the node resources from the partition",\n            "DiagnosisMessage": "Partitions with inconsistent data: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if node total resource = allocated resource + occupied resource + available resource",\n            "DiagnosisMessage": "Nodes with inconsistent data: []"\n        },\n        {\n            "Name": "Consistency of data",\n            "Succeeded": true,\n            "Description": "Check if node capacity >= allocated resources on the node",\n            "DiagnosisMessage": "Nodes with inconsistent data: []"\n        },\n        {\n            "Name": "Reservation check",\n            "Succeeded": true,\n            "Description": "Check the reservation nr compared to the number of nodes",\n            "DiagnosisMessage": "Reservation/node nr ratio: [0.000000]"\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"retrieve-full-state-dump",children:"Retrieve full state dump"}),"\n",(0,r.jsx)(n.p,{children:"Endpoint to retrieve the following information in a single response:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"List of partitions"}),"\n",(0,r.jsx)(n.li,{children:"List of applications (running and completed)"}),"\n",(0,r.jsx)(n.li,{children:"Application history"}),"\n",(0,r.jsx)(n.li,{children:"Nodes"}),"\n",(0,r.jsx)(n.li,{children:"Utilization of nodes"}),"\n",(0,r.jsx)(n.li,{children:"Generic cluster information"}),"\n",(0,r.jsx)(n.li,{children:"Cluster utilization"}),"\n",(0,r.jsx)(n.li,{children:"Container history"}),"\n",(0,r.jsx)(n.li,{children:"Queues"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/fullstatedump"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-14",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.p,{children:"The output of this REST query can be rather large and it is a combination of those which have already been demonstrated."}),"\n",(0,r.jsx)(n.h3,{id:"failure-response-1",children:"Failure response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"}),": ",(0,r.jsx)(n.code,{children:"500 Internal Server Error"})]}),"\n",(0,r.jsx)(n.h2,{id:"enable-or-disable-periodic-state-dump",children:"Enable or disable periodic state dump"}),"\n",(0,r.jsxs)(n.p,{children:["Endpoint to enable a state dump to be written periodically. By default, it is 60 seconds. The output goes to a file called ",(0,r.jsx)(n.code,{children:"yunikorn-state.txt"}),". In the current version, the file is located in the current working directory of Yunikorn and it is not configurable."]}),"\n",(0,r.jsx)(n.p,{children:"Trying to enable or disable this feature more than once in a row results in an error."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"})," : ",(0,r.jsx)(n.code,{children:"/ws/v1/periodicstatedump/{switch}/{periodSeconds}"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"})," : ",(0,r.jsx)(n.code,{children:"PUT"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Auth required"})," : NO"]}),"\n",(0,r.jsxs)(n.p,{children:["The value ",(0,r.jsx)(n.code,{children:"{switch}"})," can be either ",(0,r.jsx)(n.code,{children:"disable"})," or ",(0,r.jsx)(n.code,{children:"enable"}),". The ",(0,r.jsx)(n.code,{children:"{periodSeconds}"})," defines how often state snapshots should be taken. It is expected to be a positive integer and only interpreted in case of ",(0,r.jsx)(n.code,{children:"enable"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-15",children:"Success response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," : ",(0,r.jsx)(n.code,{children:"200 OK"})]}),"\n",(0,r.jsx)(n.h3,{id:"error-response-10",children:"Error response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"}),": ",(0,r.jsx)(n.code,{children:"400 Bad Request"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "status_code": 400,\n    "message": "required parameter enabled/disabled is missing",\n    "description": "required parameter enabled/disabled is missing"\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1780:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>t});var r=s(79474);const o={},i=r.createContext(o);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);