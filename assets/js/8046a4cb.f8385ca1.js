"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[51969],{55902:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=r(13274),s=r(37155);const o={id:"rn-1.6.1",title:"Release Announcement v1.6.1"},t="Release Announcement v1.6.1",a={type:"mdx",permalink:"/release-announce/1.6.1",source:"@site/src/pages/release-announce/1.6.1.md",title:"Release Announcement v1.6.1",description:"\x3c!--",frontMatter:{id:"rn-1.6.1",title:"Release Announcement v1.6.1"},unlisted:!1},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Highlights",id:"highlights",level:2},{value:"Orphan allocation due to reservation host mismatch",id:"orphan-allocation-due-to-reservation-host-mismatch",level:3},{value:"Improper locking during Kubernetes event handling",id:"improper-locking-during-kubernetes-event-handling",level:3},{value:"Scheduling of multiple DaemonSet pods can fail if one is reserved",id:"scheduling-of-multiple-daemonset-pods-can-fail-if-one-is-reserved",level:3},{value:"Incorrect accounting of preeempted allocations",id:"incorrect-accounting-of-preeempted-allocations",level:3},{value:"Incorrect count of placeholders released",id:"incorrect-count-of-placeholders-released",level:3},{value:"Improper locking in user/group tracking",id:"improper-locking-in-usergroup-tracking",level:3},{value:"Helm chart now supports setting GOGC / GOMEMLIMIT",id:"helm-chart-now-supports-setting-gogc--gomemlimit",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"release-announcement-v161",children:"Release Announcement v1.6.1"})}),"\n",(0,i.jsx)(n.p,{children:"We are pleased to announce that the Apache YuniKorn community has voted to release 1.6.1.\nApache YuniKorn is a standalone resource scheduler, designed for managing and scheduling Batch and Data workloads on container\norchestration frameworks like Kubernetes for on-prem and on-cloud use cases."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The Apache YuniKorn community has resolved 12 ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/issues/?filter=12353775#",children:"JIRAs"})," in this release."]}),"\n",(0,i.jsx)(n.p,{children:"Release manager: Craig Condit"}),"\n",(0,i.jsx)(n.p,{children:"Release date: 2025-01-24"}),"\n",(0,i.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,i.jsxs)(n.p,{children:["This release is primarily a bugfix release and contains critical fixes for issues found in YuniKorn 1.6.0. ",(0,i.jsx)(n.strong,{children:"All users of 1.6.0 are urged to upgrade."})]}),"\n",(0,i.jsx)(n.h3,{id:"orphan-allocation-due-to-reservation-host-mismatch",children:"Orphan allocation due to reservation host mismatch"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Critical"}),": YuniKorn 1.6.0 can improperly assign an allocation to the wrong host\nwhen a reservation on one node is fulfilled on a different one.\nFixed in ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/browse/YUNIKORN-2978",children:"YUNIKORN-2978"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"improper-locking-during-kubernetes-event-handling",children:"Improper locking during Kubernetes event handling"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Critical"}),": A race condition was found which can corrupt internal YuniKorn\ndata structures when pod and node events are published simultaneously.\nFixed in ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/browse/YUNIKORN-2910",children:"YUNIKORN-2910"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"scheduling-of-multiple-daemonset-pods-can-fail-if-one-is-reserved",children:"Scheduling of multiple DaemonSet pods can fail if one is reserved"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Critical"}),": YuniKorn can fail to allocate a DaemonSet pod in the case where a\ndifferent DaemonSet pod was already reserved on the same node.\nFixed in ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/browse/YUNIKORN-2976",children:"YUNIKORN-2976"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"incorrect-accounting-of-preeempted-allocations",children:"Incorrect accounting of preeempted allocations"}),"\n",(0,i.jsxs)(n.p,{children:["YuniKorn could mark an allocation as preempted again during it's graceful\nshutdown procedure, leading to resource accounting errors.\nFixed in ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/browse/YUNIKORN-3003",children:"YUNIKORN-3003"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"incorrect-count-of-placeholders-released",children:"Incorrect count of placeholders released"}),"\n",(0,i.jsxs)(n.p,{children:["Placeholder pod releases can be counted twice when cleanup of a timed out pod is\nrequested.\nFixed in ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/browse/YUNIKORN-2953",children:"YUNIKORN-2953"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"improper-locking-in-usergroup-tracking",children:"Improper locking in user/group tracking"}),"\n",(0,i.jsxs)(n.p,{children:["YuniKorn could update internal accounting structures unsafely in som cases.\nFixed in ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/browse/YUNIKORN-3004",children:"YUNIKORN-3004"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"helm-chart-now-supports-setting-gogc--gomemlimit",children:"Helm chart now supports setting GOGC / GOMEMLIMIT"}),"\n",(0,i.jsxs)(n.p,{children:["In prior versions, YuniKorn's memory usage was unrestricted and did not\nhonor container requests or limits. In 1.6.1 and later releases, the YuniKorn\nHelm charts support setting these values via the ",(0,i.jsx)(n.code,{children:"goGC"})," and ",(0,i.jsx)(n.code,{children:"goMemoryLimit"}),"\nattributes. These can be set on the scheduler, admission controller, and web\ncontainers."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE"}),": If you have customized YuniKorn's container memory requests or\nlimits, please ensure ",(0,i.jsx)(n.code,{children:"goMemoryLimit"})," is set to an appopriate value for your\nenvironment. The defaults for each container in the Helm chart correspond to\n75% of the default memory limits."]}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://issues.apache.org/jira/browse/YUNIKORN-3000",children:"YUNIKORN-3000"}),"\nfor more information."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},37155:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>a});var i=r(79474);const s={},o=i.createContext(s);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);