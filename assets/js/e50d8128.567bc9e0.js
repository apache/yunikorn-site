"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[32470],{43186:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=n(13274),t=n(1780);const s={id:"run_ray_job",title:"Run RayJob",description:"How to run RayJobs with YuniKorn",keywords:["Ray_crd"]},a=void 0,i={id:"user_guide/workloads/run_ray_job",title:"Run RayJob",description:"How to run RayJobs with YuniKorn",source:"@site/docs/user_guide/workloads/run_ray_job.md",sourceDirName:"user_guide/workloads",slug:"/user_guide/workloads/run_ray_job",permalink:"/docs/next/user_guide/workloads/run_ray_job",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"run_ray_job",title:"Run RayJob",description:"How to run RayJobs with YuniKorn",keywords:["Ray_crd"]},sidebar:"docs",previous:{title:"Run Ray Cluster",permalink:"/docs/next/user_guide/workloads/run_ray_cluster"},next:{title:"Cluster",permalink:"/docs/next/api/cluster"}},u={},l=[{value:"Note",id:"note",level:2},{value:"Modify YuniKorn settings",id:"modify-yunikorn-settings",level:2},{value:"Setup a KubeRay operator",id:"setup-a-kuberay-operator",level:2},{value:"Configure your Ray Cluster(optional)",id:"configure-your-ray-clusteroptional",level:3},{value:"Run a RayJob",id:"run-a-rayjob",level:2}];function d(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"note",children:"Note"}),"\n",(0,o.jsxs)(r.p,{children:["This example is how to setup ",(0,o.jsx)(r.a,{href:"https://docs.ray.io/en/master/cluster/kubernetes/getting-started.html",children:"KubeRay"})," and run ",(0,o.jsx)(r.a,{href:"https://docs.ray.io/en/master/cluster/kubernetes/getting-started/rayjob-quick-start.html",children:"Ray Job"})," with YuniKorn scheduler. It relies on an admission controller to configure the default applicationId and queue name. If you want more details, please refer to ",(0,o.jsx)(r.a,{href:"https://yunikorn.apache.org/docs/user_guide/labels_and_annotations_in_yunikorn",children:"Yunikorn supported labels"})," and ",(0,o.jsx)(r.a,{href:"https://yunikorn.apache.org/docs/user_guide/queue_config",children:"Yunikorn queue setting"}),"."]}),"\n",(0,o.jsx)(r.h2,{id:"modify-yunikorn-settings",children:"Modify YuniKorn settings"}),"\n",(0,o.jsxs)(r.p,{children:["Follow ",(0,o.jsx)(r.a,{href:"https://yunikorn.apache.org/docs/",children:"YuniKorn install"}),' and modify YuniKorn configmap "yunikorn-defaults"']}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:'kubectl patch configmap yunikorn-defaults -n yunikorn --patch \'{"data":{"admissionController.accessControl.systemUsers": "^system:serviceaccount:kube-system:,^system:serviceaccount:default:"}}\' \n'})}),"\n",(0,o.jsx)(r.h2,{id:"setup-a-kuberay-operator",children:"Setup a KubeRay operator"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"helm repo add kuberay https://ray-project.github.io/kuberay-helm/\nhelm repo update\nhelm install kuberay-operator kuberay/kuberay-operator --version 1.1.1\n"})}),"\n",(0,o.jsx)(r.h3,{id:"configure-your-ray-clusteroptional",children:"Configure your Ray Cluster(optional)"}),"\n",(0,o.jsxs)(r.p,{children:["If you disable admission controller, you need to add the schedulerName: yunikorn in ",(0,o.jsx)(r.a,{href:"https://github.com/ray-project/kuberay/blob/master/helm-chart/ray-cluster/templates/raycluster-cluster.yaml#L40",children:"raycluster spec"}),". By using applicationId label, pods with the same applicationId are marked under the same application ."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"#example\nmetadata:\n  labels:\n    applicaionId: ray-cluster-0001\n    queue: root.ray.clusters\nspec:\n  schedulerName: yunikorn # k8s will inform yunikorn based on this\n"})}),"\n",(0,o.jsx)(r.h2,{id:"run-a-rayjob",children:"Run a RayJob"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"kubectl apply -f https://raw.githubusercontent.com/ray-project/kuberay/v1.1.1/ray-operator/config/samples/ray-job.sample.yaml\n"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["View the job status\n",(0,o.jsx)(r.img,{alt:"ray_job_job",src:n(69049).A+"",width:"1179",height:"627"})]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"Services in Kubernetes aren't directly accessible by default. However, you can use port-forwarding to connect to them locally."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"kubectl port-forward service/raycluster-kuberay-head-svc 8265:8265\n"})}),"\n",(0,o.jsxs)(r.p,{children:["After port-forward set up, you can access the Ray dashboard by going to ",(0,o.jsx)(r.code,{children:"http://localhost:8265"})," in your web browser."]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["Ray Dashboard\n",(0,o.jsx)(r.img,{alt:"ray_job_ray_dashboard",src:n(47509).A+"",width:"1212",height:"575"})]}),"\n",(0,o.jsxs)(r.li,{children:["YuniKorn UI\n",(0,o.jsx)(r.img,{alt:"ray_job_on_ui",src:n(74596).A+"",width:"1191",height:"672"})]}),"\n"]})]})}function c(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},69049:(e,r,n)=>{n.d(r,{A:()=>o});const o=n.p+"assets/images/ray_job_job-aff18772fa7d41be8724e18ade4eb1a2.png"},74596:(e,r,n)=>{n.d(r,{A:()=>o});const o=n.p+"assets/images/ray_job_on_ui-acc8201d63cea1ad42acda3cdd547fd5.png"},47509:(e,r,n)=>{n.d(r,{A:()=>o});const o=n.p+"assets/images/ray_job_ray_dashboard-3c3fc6c7ad53524f6d40a339203cdddd.png"},1780:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var o=n(79474);const t={},s=o.createContext(t);function a(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);