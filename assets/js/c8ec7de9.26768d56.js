"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[58705],{82858:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=r(13274),i=r(1780);const o={id:"workload_overview",title:"Overview"},l=void 0,a={id:"user_guide/workloads/workload_overview",title:"Overview",description:"\x3c!--",source:"@site/docs/user_guide/workloads/workload_overview.md",sourceDirName:"user_guide/workloads",slug:"/user_guide/workloads/workload_overview",permalink:"/docs/next/user_guide/workloads/workload_overview",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"workload_overview",title:"Overview"},sidebar:"docs",previous:{title:"Event System",permalink:"/docs/next/user_guide/event_system"},next:{title:"Run NVIDIA GPU Jobs",permalink:"/docs/next/user_guide/workloads/run_nvidia"}},t={},d=[{value:"Advanced Examples",id:"advanced-examples",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The YuniKorn scheduler is able to run any Kubernetes workload. All that is required is to ensure\nthat the ",(0,s.jsx)(n.code,{children:"schedulerName"})," field of a Pod specification is set to ",(0,s.jsx)(n.code,{children:"yunikorn"})," and an ",(0,s.jsx)(n.code,{children:"applicationId"}),"\nlabel is set to a unique value per application:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: sleep\n    applicationId: "application-sleep-0001"\n  name: sleep-app-1\nspec:\n  schedulerName: yunikorn\n  containers:\n    - name: sleep-30s\n      image: "alpine:latest"\n      command: ["sleep", "30"]\n      resources:\n        requests:\n          cpu: "100m"\n          memory: "100M"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Additionally, if the YuniKorn admission controller is present, the ",(0,s.jsx)(n.code,{children:"schedulerName"})," field may be\nomitted as it will be set automatically on newly created pods."]}),"\n",(0,s.jsx)(n.h2,{id:"advanced-examples",children:"Advanced Examples"}),"\n",(0,s.jsx)(n.p,{children:"Examples of more advanced use cases can be found here:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_nvidia",children:"Run NVIDIA GPU Jobs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_spark",children:"Run Spark Jobs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_flink",children:"Run Flink Jobs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_tf",children:"Run TensorFlow Jobs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_mpi",children:"Run MPI Jobs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_ray_cluster",children:"Run Ray Cluster"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_ray_job",children:"Run RayJob"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"run_ray_service",children:"Run Ray Service Jobs"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1780:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var s=r(79474);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);