"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[24451],{22355:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=s(13274),t=s(1780);const r={id:"openshift_development",title:"Development in CodeReady Containers"},o=void 0,c={id:"developer_guide/openshift_development",title:"Development in CodeReady Containers",description:"\x3c!--",source:"@site/versioned_docs/version-1.4.0/developer_guide/openshift_development.md",sourceDirName:"developer_guide",slug:"/developer_guide/openshift_development",permalink:"/docs/1.4.0/developer_guide/openshift_development",draft:!1,unlisted:!1,tags:[],version:"1.4.0",frontMatter:{id:"openshift_development",title:"Development in CodeReady Containers"},sidebar:"docs",previous:{title:"Deploy to Kubernetes",permalink:"/docs/1.4.0/developer_guide/deployment"},next:{title:"Architecture",permalink:"/docs/1.4.0/design/architecture"}},l={},a=[{value:"Set up a running CRC cluster",id:"set-up-a-running-crc-cluster",level:2},{value:"Testing a patch",id:"testing-a-patch",level:2},{value:"Using custom images",id:"using-custom-images",level:2},{value:"Podman",id:"podman",level:3},{value:"Directly pushing OS Image Registry",id:"directly-pushing-os-image-registry",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"YuniKorn is tested against OpenShift and developers can set up their local environment to test patches against OpenShift.\nOur recommended local environment uses CodeReady containers."}),"\n",(0,i.jsx)(n.h2,{id:"set-up-a-running-crc-cluster",children:"Set up a running CRC cluster"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Download CodeReady Container binaries"}),"\n",(0,i.jsxs)(n.p,{children:['Select your OS from the dropdown list then click on "Download" (On a Mac, you\'ll download crc-macos-amd64.tar.xz; on Linux, crc-linux-amd64.tar.xz).\nYou\'ll be asked to connect using your Red Hat login. If you don\'t have one, just click on "Create one now". You do ',(0,i.jsx)(n.em,{children:"not"})," need a Red Hat subscription for this."]}),"\n",(0,i.jsx)(n.p,{children:"Once logged in, download CodeReady Containers binary and the pull secret."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Unzip the tar file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"tar -xvzf crc-macos-amd64.tar.xz\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Move the crc binary under your path. Like"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo cp `pwd`/crc-macos-$CRCVERSION-amd64/crc /usr/local/bin\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Configure CRC in accordance with your hardware capabilities."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"crc config set memory 16000\ncrc config set cpus 12\ncrc setup\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Start the CRC and open the console."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"crc start --pull-secret-file pull-secret.txt\ncrc console\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testing-a-patch",children:"Testing a patch"}),"\n",(0,i.jsx)(n.p,{children:"The following steps assume you have a running CRC cluster in your laptop. Note that these steps are not tested against a remote CRC cluster."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Access your environment through the ",(0,i.jsx)(n.code,{children:"oc"})," command."]}),"\n",(0,i.jsxs)(n.p,{children:["Type in the ",(0,i.jsx)(n.code,{children:"crc oc-env"})," command to a shell."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ crc oc-env\nexport PATH="/Users/<user>/.crc/bin/oc:$PATH"\n# Run this command to configure your shell:\n# eval $(crc oc-env)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["So you need to type in this to access the ",(0,i.jsx)(n.code,{children:"oc"})," comamnd:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"eval $(crc oc-env)\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Log in to ",(0,i.jsx)(n.code,{children:"oc"}),". After the CRC has started it will display a similar message:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"To access the cluster, first set up your environment by following 'crc oc-env' instructions.\nThen you can access it by running 'oc login -u developer -p developer https://api.crc.testing:6443'.\nTo login as an admin, run 'oc login -u kubeadmin -p duduw-yPT9Z-hsUpq-f3pre https://api.crc.testing:6443'.\nTo access the cluster, first set up your environment by following 'crc oc-env' instructions.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"oc login -u kubeadmin ..."})," command."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Get the URL of the local OpenShift cluster's internal private Docker repository by typing the command below."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ oc get route default-route -n openshift-image-registry --template='{{ .spec.host }}'\ndefault-route-openshift-image-registry.apps-crc.testing\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By default it should be ",(0,i.jsx)(n.code,{children:"default-route-openshift-image-registry.apps-crc.testing"}),". Change the steps above, if the displayed URL is different."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Prepare the Docker images."}),"\n",(0,i.jsxs)(n.p,{children:["You can read more about this at the bottom, in the ",(0,i.jsx)(n.em,{children:"Using custom images"})," section."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Prepare the helm chart."}),"\n",(0,i.jsxs)(n.p,{children:["If you want to use custom Docker images, replace the images in the chart's ",(0,i.jsx)(n.code,{children:"values.yaml"})," config file."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that if you manually pushed the Docker image to the ",(0,i.jsx)(n.code,{children:"default-route-openshift-image-registry.apps-crc.testing"})," docker registry directly you need to have valid certs to access it.\nOn OpenShift there's service for this: ",(0,i.jsx)(n.code,{children:"image-registry.openshift-image-registry.svc"}),", which is easier to use."]}),"\n",(0,i.jsx)(n.p,{children:"For example, if you want to override all of the Docker images you should use the following configs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"image:\n  repository: image-registry.openshift-image-registry.svc:5000/yunikorn/yunikorn\n  tag: scheduler-latest\n  pullPolicy: Always\n\npluginImage:\n  repository: image-registry.openshift-image-registry.svc:5000/yunikorn/yunikorn\n  tag: scheduler-plugin-latest\n  pullPolicy: Always\n\nadmissionController:\n  image:\n    repository: image-registry.openshift-image-registry.svc:5000/yunikorn/yunikorn\n    tag: admission-latest\n    pullPolicy: Always\n\nweb:\n  image:\n    repository: image-registry.openshift-image-registry.svc:5000/yunikorn/yunikorn-web\n    tag: latest\n    pullPolicy: Always\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can find it in the yunikorn-release repo's helm chart directory."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Install the helm charts."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"helm install yunikorn . -n yunikorn\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"using-custom-images",children:"Using custom images"}),"\n",(0,i.jsx)(n.h3,{id:"podman",children:"Podman"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Log in into Podman using the following command."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"podman login --tls-verify=false -u kubeadmin -p $(oc whoami -t) default-route-openshift-image-registry.apps-crc.testing\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Build the image in the repository e.g. in shim using the generic ",(0,i.jsx)(n.code,{children:"make image"})," command."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Verify that the image is present in the repository."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"podman images\nREPOSITORY                TAG              IMAGE ID     CREATED            SIZE\nlocalhost/apache/yunikorn admission-latest 19eb41241d64 About a minute ago 53.5 MB\nlocalhost/apache/yunikorn scheduler-latest e60e09b424d9 About a minute ago 543 MB\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"directly-pushing-os-image-registry",children:"Directly pushing OS Image Registry"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create the images that you wish to replace."}),"\n",(0,i.jsx)(n.p,{children:"You can either build new images locally or use official (maybe mix both)."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For the -shim and -web images checkout the repository (optionally make your changes) and type the following command:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"make clean image REGISTRY=default-route-openshift-image-registry.apps-crc.testing/<project>/<name>:<tag>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note that in OpenShift a project is equivalent a Kubernetes namespace. The ",(0,i.jsx)(n.code,{children:"yunikorn"})," project/namespace is recommended."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Using an official image is possible by, retagging it with by the ",(0,i.jsx)(n.code,{children:"docker tag"})," command."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker tag apache/yunikorn:scheduler-latest default-route-openshift-image-registry.apps-crc.testing/yunikorn/yunikorn:scheduler-latest\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Login to the Docker repository."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker login -u kubeadmin -p $(oc whoami -t) default-route-openshift-image-registry.apps-crc.testing\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Push the Docker images to the internal Docker repository"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"docker push default-route-openshift-image-registry.apps-crc.testing/yunikorn/yunikorn:scheduler-latest\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1780:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(79474);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);