"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31669],{93889:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=s(13274),r=s(1780);const i={id:"user_guide",title:"User Guide",slug:"/"},l=void 0,a={id:"get_started/user_guide",title:"User Guide",description:"\x3c!--",source:"@site/versioned_docs/version-0.8.0/get_started/user_guide.md",sourceDirName:"get_started",slug:"/",permalink:"/docs/0.8.0/",draft:!1,unlisted:!1,tags:[],version:"0.8.0",frontMatter:{id:"user_guide",title:"User Guide",slug:"/"},sidebar:"docs",next:{title:"Developer Guide",permalink:"/docs/0.8.0/get_started/developer_guide"}},o={},c=[{value:"Quick Start",id:"quick-start",level:2},{value:"Run workloads with YuniKorn Scheduler",id:"run-workloads-with-yunikorn-scheduler",level:2},{value:"Running simple sample applications",id:"running-simple-sample-applications",level:3},{value:"Running a spark application",id:"running-a-spark-application",level:3},{value:"Running a simple Tensorflow job",id:"running-a-simple-tensorflow-job",level:3},{value:"Affinity scheduling",id:"affinity-scheduling",level:3},{value:"Volume examples",id:"volume-examples",level:3},{value:"Local volume",id:"local-volume",level:4},{value:"NFS volume",id:"nfs-volume",level:4},{value:"EBS volume",id:"ebs-volume",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Before reading this guide, we assume you either have a Kubernetes cluster, or a local Kubernetes dev environment, e.g Minikube.\nIt is also assumed that ",(0,t.jsx)(n.code,{children:"kubectl"})," is on your path and properly configured.\nFollow this ",(0,t.jsx)(n.a,{href:"/docs/0.8.0/setup/env_setup",children:"guide"})," on how to setup a local Kubernetes cluster using docker-desktop."]}),"\n",(0,t.jsxs)(n.p,{children:["All files mentioned in this user guide are part of the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim",children:"yunikorn-k8shim"})," repository.\nThey are located in the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/tree/master/deployments/scheduler",children:"deployments"})," sub directory. The command given assume that you are located in that directory."]}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.p,{children:"The easiest way to get started is to use our Helm Charts to deploy YuniKorn on an existing Kubernetes cluster. Recommended to use Helm 3 or later versions."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",metastring:"script",children:"helm repo add yunikorn https://apache.github.io/incubator-yunikorn-release\nhelm repo update\nhelm install yunikorn yunikorn/yunikorn --version 0.8.0\n"})}),"\n",(0,t.jsxs)(n.p,{children:["it will firstly create a ",(0,t.jsx)(n.code,{children:"configmap"})," where stores YuniKorn configuration, and then deploy YuniKorn scheduler\nand web UI containers in a pod as a ",(0,t.jsx)(n.code,{children:"deployment"})," in the ",(0,t.jsx)(n.code,{children:"default"})," namespace. If you want to deploy YuniKorn to another namespace, you can do following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",metastring:"script",children:"kubectl create namespace yunikorn\nhelm install yunikorn yunikorn/yunikorn --namespace yunikorn --version 0.8.0\n"})}),"\n",(0,t.jsx)(n.p,{children:"Uninstall yunikorn:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",metastring:"script",children:"helm uninstall yunikorn --namespace yunikorn\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you don't want to use helm charts, you can find our step-by-step\ntutorial ",(0,t.jsx)(n.a,{href:"/docs/0.8.0/setup/deployment",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"run-workloads-with-yunikorn-scheduler",children:"Run workloads with YuniKorn Scheduler"}),"\n",(0,t.jsxs)(n.p,{children:["Unlike default Kubernetes scheduler, YuniKorn has ",(0,t.jsx)(n.code,{children:"application"})," notion in order to support batch workloads better.\nThere are a few ways to run batch workloads with YuniKorn scheduler"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add labels ",(0,t.jsx)(n.code,{children:"applicationId"})," and ",(0,t.jsx)(n.code,{children:"queue"})," in pod's spec."]}),"\n",(0,t.jsx)(n.li,{children:"Pods that have the same applicationId will be considered as tasks from 1 application."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of the entry to add:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'  labels:\n    applicationId: "MyOwnApplicationId"\n    queue: "root.sandbox"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["All examples provided in the next section have the labels already set. The ",(0,t.jsx)(n.code,{children:"queue"})," name must be a known queue name from the configuration.\nUnknown queue names will cause the pod to be rejected by the YuniKorn scheduler."]}),"\n",(0,t.jsx)(n.h3,{id:"running-simple-sample-applications",children:"Running simple sample applications"}),"\n",(0,t.jsxs)(n.p,{children:["All sample deployments can be found under ",(0,t.jsx)(n.code,{children:"examples"})," directory.\nThe list of all examples is in the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/blob/master/deployments/examples",children:"README"}),".\nNot all examples are given here. Further details can be found in that README."]}),"\n",(0,t.jsx)(n.p,{children:"A single pod based on a standard nginx image:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f examples/nginx/nginx.yaml\n"})}),"\n",(0,t.jsx)(n.p,{children:"A simple sleep job example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f examples/sleep/sleeppods.yaml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The files for these examples can be found in the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/tree/master/deployments/examples#nginx",children:"README nginx"})," and the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/tree/master/deployments/examples#sleep",children:"README sleep"})," sections."]}),"\n",(0,t.jsx)(n.h3,{id:"running-a-spark-application",children:"Running a spark application"}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes support for Apache Spark is not part of all releases. You must have a current release of Apache Spark with Kubernetes support built in."}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"examples/spark"})," directory contains pod template files for the Apache Spark driver and executor, they can be used if you want to run Spark on K8s using this scheduler."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Get latest spark from github (only latest code supports to specify pod template), URL: ",(0,t.jsx)(n.a,{href:"https://github.com/apache/spark",children:"https://github.com/apache/spark"})]}),"\n",(0,t.jsx)(n.li,{children:"Build spark with Kubernetes support:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"mvn -Pyarn -Phadoop-2.7 -Dhadoop.version=2.7.4 -Phive -Pkubernetes -Phive-thriftserver -DskipTests package\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Run spark submit"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"spark-submit --master k8s://http://localhost:8001 --deploy-mode cluster --name spark-pi \\\n  --class org.apache.spark.examples.SparkPi \\\n  --conf spark.executor.instances=1 \\\n  --conf spark.kubernetes.container.image=yunikorn/spark:latest \\\n  --conf spark.kubernetes.driver.podTemplateFile=examples/spark/driver.yaml \\\n  --conf spark.kubernetes.executor.podTemplateFile=examples/spark/executor.yaml \\\n  local:///opt/spark/examples/jars/spark-examples_2.12-3.0.0-SNAPSHOT.jar\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Spark uses its own version of the application ID tag called ",(0,t.jsx)(n.em,{children:"spark-app-id"}),". This tags is required for the pods to be recognised as specific spark pods."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"examples/spark/driver.yaml"}),"\n",(0,t.jsxs)(n.li,{children:["examples/spark/executor.yaml\nWhen you run Spark on Kubernetes with pod templates, ",(0,t.jsx)(n.em,{children:"spark-app-id"})," is considered the applicationId.\nA script to run the spark application and the yaml files are in the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/tree/master/deployments/examples#spark",children:"README spark"})," section."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"running-a-simple-tensorflow-job",children:"Running a simple Tensorflow job"}),"\n",(0,t.jsx)(n.p,{children:"There is an example for Tensorflow job. You must install tf-operator first.\nYou can install tf-operator by applying all yaml from two website down below:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["CRD: ",(0,t.jsx)(n.a,{href:"https://github.com/kubeflow/manifests/tree/master/tf-training/tf-job-crds/base",children:"https://github.com/kubeflow/manifests/tree/master/tf-training/tf-job-crds/base"})]}),"\n",(0,t.jsxs)(n.li,{children:["Deployment: ",(0,t.jsx)(n.a,{href:"https://github.com/kubeflow/manifests/tree/master/tf-training/tf-job-operator/base",children:"https://github.com/kubeflow/manifests/tree/master/tf-training/tf-job-operator/base"}),"\nAlso you can install kubeflow which can auto install tf-operator for you, URL: ",(0,t.jsx)(n.a,{href:"https://www.kubeflow.org/docs/started/getting-started/",children:"https://www.kubeflow.org/docs/started/getting-started/"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A simple Tensorflow job example:"}),"\n",(0,t.jsxs)(n.p,{children:["You need to ",(0,t.jsx)(n.a,{href:"https://github.com/kubeflow/tf-operator/tree/master/examples/v1/dist-mnist",children:"build the image"})," which used in example yaml."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f examples/tfjob/tf-job-mnist.yaml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The file for this example can be found in the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/tree/master/deployments/examples#Tensorflow-job",children:"README Tensorflow job"})," section."]}),"\n",(0,t.jsx)(n.h3,{id:"affinity-scheduling",children:"Affinity scheduling"}),"\n",(0,t.jsx)(n.p,{children:"The scheduler supports affinity and ati affinity scheduling on kubernetes using predicates:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f examples/predicates/pod-anti-affinity-example.yaml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This deployment ensures 2 pods cannot be co-located together on same node.\nIf this yaml is deployed on 1 node cluster, expect 1 pod to be started and the other pod should stay in a pending state.\nMore examples on affinity and anti affinity scheduling in the predicates section of the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/tree/master/deployments/examples#predicates",children:"README predicates"})]}),"\n",(0,t.jsx)(n.h3,{id:"volume-examples",children:"Volume examples"}),"\n",(0,t.jsxs)(n.p,{children:["There are three examples with volumes available. The NFS example does not work on docker desktop and requires ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/install-minikube/",children:"Minikube"}),".\nThe EBS volume requires a kubernetes cluster running on AWS (EKS).\nFurther instructions for the volume examples in the section of the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/incubator-yunikorn-k8shim/tree/master/deployments/examples#volumes",children:"README Volumes"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["CAUTION: All examples will generate an unending stream of data in a file called ",(0,t.jsx)(n.code,{children:"dates.txt"})," on the mounted volume. This could cause a disk to fill up and execution time should be limited."]}),"\n",(0,t.jsx)(n.h4,{id:"local-volume",children:"Local volume"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create the local volume and volume claim"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f examples/volume/local-pv.yaml\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create the pod that uses the volume"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f examples/volume/pod-local.yaml\n"})}),"\n",(0,t.jsx)(n.h4,{id:"nfs-volume",children:"NFS volume"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create the NFS server"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f nfs-server.yaml\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"get the IP address for the NFS server and update the pod yaml by replacing the existing example IP with the one returned:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl get services | grep nfs-server | awk '{print $3}'\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create the pod that uses the volume"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f pod-nfs.yaml\n"})}),"\n",(0,t.jsx)(n.h4,{id:"ebs-volume",children:"EBS volume"}),"\n",(0,t.jsxs)(n.p,{children:["The Volume for the first two examples must be created before you can run the examples. The ",(0,t.jsx)(n.code,{children:"VolumeId"})," must be updated in the yaml files to get this to work.\nTo create a volume you can use the command line or web UI:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"aws ec2 create-volume --volume-type gp2 --size 10 --availability-zone us-west-1\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"VolumeId"})," is part of the returned information of the create command."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create the pod that uses a direct volume reference:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f pod-ebs-direct.yaml\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create the persistent volume (pv) and a pod that uses a persistent volume claim (pvc) to claim the existing volume:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f ebs-pv.yaml\nkubectl create -f pod-ebs-exist.yaml\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create a storage class to allow dynamic provisioning and create the pod that uses this mechanism:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl create -f storage-class.yaml\nkubectl create -f pod-ebs-dynamic.yaml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Dynamic provisioning has a number of pre-requisites for it to work, see ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/",children:"Dynamic Volume Provisioning"})," in the kubernetes docs.\nThe dynamically created volume will be automatically destroyed as soon as the pod is stopped."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1780:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(79474);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);